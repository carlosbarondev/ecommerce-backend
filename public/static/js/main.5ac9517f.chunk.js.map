{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/shippingReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/ui.js","actions/cart.js","actions/auth.js","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","components/ui/MenuCanvas.js","components/ui/CartCanvas.js","components/ui/CategoryCanvas.js","components/search/Search.js","components/ui/TopBar.js","components/products/ProductScreen.js","components/products/Product.js","components/products/ProductList.js","components/cart/summary/SummaryModal.js","helpers/invoicePdf.js","components/cart/summary/Summary.js","components/cart/CartScreen.js","routers/PrivateRoute.js","components/products/SubCategory.js","components/products/ProductListBest.js","components/products/SubCategoryList.js","components/products/Category.js","components/products/CategoryList.js","components/products/SubCategoryScreen.js","components/products/CarouselHome.js","components/search/SearchList.js","components/ui/Footer.js","components/products/ImagesHome.js","routers/HomeRouter.js","components/panel/user/MenuPanel.js","helpers/imageUpload.js","components/panel/user/Data.js","components/panel/user/Wishes.js","components/panel/user/Ratings.js","components/panel/user/Orders.js","components/panel/user/OrdersDetail.js","components/panel/admin/AdminPanel.js","components/panel/admin/UsersModal.js","components/panel/admin/Users.js","components/panel/admin/CategoryAddModal.js","components/panel/admin/Categories.js","components/panel/admin/SubUpdateModal.js","components/panel/admin/SubAddModal.js","components/panel/admin/CategoryDetail.js","components/panel/admin/ProductAddModal.js","components/panel/admin/Products.js","components/panel/admin/ProductDetail.js","routers/PanelRouter.js","actions/shipping.js","components/cart/shipping/ShippingForm.js","components/cart/shipping/ShippingFormBilling.js","components/cart/shipping/ShippingModal.js","components/cart/shipping/ShippingList.js","components/cart/shipping/Shipping.js","components/cart/payment/PaymentForm.js","components/cart/payment/Payment.js","components/ui/Stepper.js","routers/AppRouter.js","Ecommerce.js","index.js"],"names":["types","initialState","step","menuCanvas","cartCanvas","categoryCanvas","backdrop","shippingModal","elegirShippingModal","checking","carrito","envio","facturacion","activo","predeterminado","rootReducer","combineReducers","ui","state","action","type","payload","auth","nombre","img","cart","productIndex","product","unidades","filter","e","producto","_id","shipping","map","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","formData","token","localStorage","getItem","stepChange","menuCanvasChange","cartCanvasChange","categoryCanvasChange","backdropChange","shippingModalChange","shippingModalElegir","productStartAdd","cantidad","buy","dispatch","getState","findIndex","pid","productAdd","timer","setInterval","clearInterval","cartClear","login","user","checkingFinish","logout","changeName","changeImage","MyTextInput","label","props","useField","field","meta","FormGroup","className","FormLabel","htmlFor","id","name","FormControl","touched","error","FormText","RegisterScreen","useDispatch","navigate","useNavigate","handleShowPass","x","document","querySelector","Image","src","alt","style","onClick","fluid","initialValues","email","password","password2","validationSchema","Yup","min","max","required","onSubmit","Swal","fire","correo","a","resp","json","msg","setItem","Date","getTime","usuario","uid","rol","estado","lastPath","replace","startRegister","placeholder","Row","Col","xs","sm","value","Button","variant","size","LoginScreen","lg","ListGroup","Item","values","startLogin","MenuCanvas","useSelector","Offcanvas","show","onHide","placement","scroll","Header","closeButton","closeVariant","Title","image","roundedColor","imageWidth","imageHeight","roundedSize","borderRadius","Body","clear","CartCanvas","handleClose","length","reduce","n","precio","toFixed","to","normalizeText","categoria","subcategoria","CategoryCanvas","useState","categorias","setCategorias","menu","setMenu","indexCat","setIndexCat","setChecking","useEffect","console","log","fetchData","handleLink","nombreSub","idCat","index","cat","handleChangeMenu","subcategorias","sub","Search","items","setItems","aux","setAux","productos","forEach","p","item","concat","width","onSearch","string","results","addEventListener","event","key","preventDefault","target","blur","busqueda","onSelect","formatResult","find","inputSearchString","styling","height","iconColor","placeholderColor","routes","path","breadcrumb","TopBar","location","useLocation","carro","breadcrumbs","useBreadcrumbs","Navbar","sticky","bg","Container","Brand","pathname","match","ProductScreen","ProductoNombre","useParams","setProducto","setCantidad","options","year","month","day","handleCart","stock","handleWish","idProducto","deseos","ratingValue","rating","allowHover","opinion","href","descripcion","marginLeft","onChange","handleChange","parseInt","marginRight","undefined","showTooltip","tooltipDefaultText","tooltipArray","tooltipStyle","op","titulo","fecha","toLocaleDateString","comentario","Product","Card","Text","charAt","toUpperCase","slice","ProductList","desde","limite","ordenar","setProductos","md","xl","as","SummaryModal","setModalShow","oldTitulo","oldComentario","oldRating","setRating","handleSubmit","enviar","bodyEnviar","Modal","centered","rate","rows","Footer","pdfMake","vfs","pdfFonts","invoicePdf","resumen","push","docDefinition","content","text","columns","direccionFacturacion","line1","line2","city","postal_code","country","fontSize","table","widths","heights","fillColor","lineHeight","canvas","x1","y1","x2","y2","lineWidth","direccionEnvio","address","idPedido","total","styles","header","bold","subheader","alignment","pagado","margin","quote","italics","small","tableExample","tableHeader","color","defaultStyle","columnGap","createPdf","open","Summary","useSearchParams","searchParams","modalShow","setResumen","get","pago","bodyPago","bodyUsuario","productoEnviar","prod","paymentIntent","created","customer","metodoPago","charges","payment_method_details","card","brand","digitos","last4","amount","pedido","bodyPedido","removeItem","parse","CartScreen","setTotal","scrollTo","cont","handleDelete","productDelete","TransitionGroup","CSSTransition","timeout","classNames","PrivateRoute","isAuthenticated","children","search","SubCategory","CategoriaNombre","nombreCat","ProductListBest","SubCategoryList","setSubcategorias","setNombre","Category","CategoryList","SubCategoryScreen","SubCategoriaNombre","CarouselHome","Carousel","SearchList","ImagesHome","HomeRouter","element","MenuPanel","imageUpload","coleccion","files","FormData","append","Data","fileUpload","setFileUpload","postData","message","handleUploadImage","then","catch","handleDeleteImage","controlId","accept","disabled","Wishes","setDeseos","seleccionados","setSeleccionados","handleAdd","nav","checked","querySelectorAll","ids","Array","from","wish","cartProduct","Form","component","getElementById","handleSelect","Check","Ratings","valorados","setValorados","noValorados","setNovalorados","modalShowValorados","setModalShowValorados","modalShowNoValorados","setModalShowNoValorados","Tabs","defaultActiveKey","Tab","eventKey","title","idComentario","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","Orders","pedidos","setPedidos","OrdersDetail","AdminPanel","UsersModal","usuarios","setUsuarios","oldCorreo","normalizeWhiteSpaces","newUsuarios","Users","desactivar","CategoryAddModal","resetForm","newCat","reload","newCatImg","Categories","vendidos","SubUpdateModal","setSubCategorias","oldNombre","newSub","SubAddModal","setCategoria","setModalShowAdd","idCategoria","setTimeout","bodyCat","bodySub","CategoryDetail","modalShowAdd","handleSubDelete","ProductAddModal","setCat","setSub","typeError","FormSelect","defaultValue","hidden","Products","resp2","body2","vendido","ProductDetail","oldState","subCat","oldSubcategoria","PanelRouter","shippingInit","shippingSetActive","shippingSetDefault","shippingStartAddNew","newEnvio","direccion","calle","numero","shippingAddNew","Promise","resolve","shippingStartUpdate","shippingUpdate","shippingDelete","idEnvio","shippingSort","envios","shippingStartAddBilling","poblacion","pais","codigo","provincia","shippingAddBilling","shippingDeleteBilling","ShippingForm","handleRegister","telefono","foundIdx","el","ar","splice","unshift","test","val","toString","setFieldValue","handleAuto","defaultChecked","ShippingFormBilling","ShippingModal","ShippingList","activar","shippingStartDelete","handleEdit","Shipping","PaymentForm","stripe","useStripe","elements","useElements","setMessage","isLoading","setIsLoading","visible","setVisible","clientSecret","URLSearchParams","retrievePaymentIntent","status","confirmPayment","confirmParams","return_url","visibility","onReady","stripePromise","loadStripe","Payment","setClientSecret","res","appearance","theme","entryText","navigator","clipboard","writeText","Spinner","animation","role","CartStepper","handleClick","activeStep","connectorStateColors","AppRouter","oldCart","Ecommerce","ReactDOM","render"],"mappings":"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","file":"static/js/main.5ac9517f.chunk.js","sourcesContent":["export const types = {\r\n\r\n    stepChange: '[ui] Change step',\r\n    menuCanvasChange: '[ui] Change menu canvas',\r\n    cartCanvasChange: '[ui] Change cart canvas',\r\n    categoryCanvasChange: '[ui] Change category canvas',\r\n    backdropChange: '[ui] Change backdrop',\r\n    shippingModalChange: '[ui] Change shipping modal',\r\n    shippingModalElegir: '[ui] Shipping modal elegir',\r\n\r\n    authLogin: '[auth] Login',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authLogout: '[auth] Logout',\r\n    changeName: '[auth] Change Name',\r\n    changeImage: '[auth] Change Image',\r\n\r\n    cartInit: '[cart] Init cart',\r\n    cartAdd: '[cart] Add cart',\r\n    cartDelete: '[cart] Delete cart',\r\n    cartClear: '[cart] Logout',\r\n\r\n    shippingInit: '[shipping] Init shipping',\r\n    shippingSetActive: '[shipping] Set active shipping',\r\n    shippingSetDefault: '[shipping] Set default shipping',\r\n    shippingAddNew: '[shipping] Add new shipping',\r\n    shippingUpdate: '[shipping] Update shipping',\r\n    shippingDelete: '[shipping] Delete shipping',\r\n    shippingSort: '[shipping] Sort shipping',\r\n    shippingInitBilling: '[shipping] Init billing',\r\n    shippingAddBilling: '[shipping] Add billing',\r\n    shippingUpdateBilling: '[shipping] Update billing',\r\n    shippingDeleteBilling: '[shipping] Delete billing',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    step: 2,\r\n    menuCanvas: false,\r\n    cartCanvas: false,\r\n    categoryCanvas: false,\r\n    backdrop: true,\r\n    shippingModal: false,\r\n    elegirShippingModal: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.stepChange:\r\n            return {\r\n                ...state,\r\n                step: action.payload,\r\n            }\r\n        case types.menuCanvasChange:\r\n            return {\r\n                ...state,\r\n                menuCanvas: !state.menuCanvas,\r\n            }\r\n        case types.cartCanvasChange:\r\n            return {\r\n                ...state,\r\n                cartCanvas: !state.cartCanvas,\r\n            }\r\n        case types.categoryCanvasChange:\r\n            return {\r\n                ...state,\r\n                categoryCanvas: !state.categoryCanvas,\r\n            }\r\n        case types.backdropChange:\r\n            return {\r\n                ...state,\r\n                backdrop: action.payload,\r\n            }\r\n        case types.shippingModalChange:\r\n            return {\r\n                ...state,\r\n                shippingModal: action.payload,\r\n            }\r\n        case types.shippingModalElegir:\r\n            return {\r\n                ...state,\r\n                elegirShippingModal: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // nombre: null,\r\n    // correo: null,\r\n    // rol: null,\r\n    // estado: null,\r\n    // img: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        case types.changeName:\r\n            return {\r\n                ...state,\r\n                nombre: action.payload,\r\n                checking: false\r\n            }\r\n        case types.changeImage:\r\n            return {\r\n                ...state,\r\n                img: action.payload,\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    carrito: []\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.cartInit:\r\n            return {\r\n                carrito: action.payload\r\n            }\r\n        case types.cartAdd:\r\n            if (action.payload.productIndex === -1) {\r\n                return {\r\n                    ...state,\r\n                    carrito: [...state.carrito, action.payload.product]\r\n                }\r\n            }\r\n            else {\r\n                state.carrito[action.payload.productIndex].unidades = action.payload.product.unidades\r\n                return {\r\n                    ...state,\r\n                }\r\n            }\r\n        case types.cartDelete:\r\n            return {\r\n                ...state,\r\n                carrito: state.carrito.filter(\r\n                    e => (e.producto._id !== action.payload)\r\n                )\r\n            }\r\n        case types.cartClear:\r\n            return {\r\n                carrito: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    envio: [],\r\n    facturacion: {},\r\n    activo: null,\r\n    predeterminado: null\r\n};\r\n\r\nexport const shippingReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.shippingInit:\r\n            return {\r\n                envio: action.payload\r\n            }\r\n        case types.shippingInitBilling:\r\n            return {\r\n                facturacion: action.payload\r\n            }\r\n        case types.shippingSetActive:\r\n            return {\r\n                ...state,\r\n                activo: action.payload,\r\n            }\r\n        case types.shippingSetDefault:\r\n            return {\r\n                ...state,\r\n                predeterminado: action.payload,\r\n            }\r\n        case types.shippingAddNew:\r\n            return {\r\n                ...state,\r\n                envio: [...state.envio, action.payload],\r\n            }\r\n        case types.shippingUpdate:\r\n            return {\r\n                ...state,\r\n                envio: state.envio.map(\r\n                    e => (e._id === action.payload._id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.shippingDelete:\r\n            return {\r\n                ...state,\r\n                envio: state.envio.filter(\r\n                    e => (e._id !== action.payload)\r\n                )\r\n            }\r\n        case types.shippingSort:\r\n            return {\r\n                ...state,\r\n                envio: action.payload,\r\n            }\r\n        case types.shippingAddBilling:\r\n            return {\r\n                ...state,\r\n                facturacion: action.payload,\r\n            }\r\n        case types.shippingUpdateBilling:\r\n            return {\r\n                ...state,\r\n                facturacion: action.payload,\r\n            }\r\n        case types.shippingDeleteBilling:\r\n            return {\r\n                ...state,\r\n                facturacion: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { cartReducer } from \"./cartReducer\";\r\nimport { shippingReducer } from \"./shippingReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    cart: cartReducer,\r\n    shipping: shippingReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n// Configuración para activar la extensión Redux-Devtools\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    // Configuración para activar thunk\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_NODE;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url);\r\n\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET', formData = false) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: !formData\r\n                ? {\r\n                    'Content-type': 'application/json',\r\n                    'x-token': token\r\n                }\r\n                : {\r\n                    'x-token': token\r\n                },\r\n            body: !formData ? JSON.stringify(data) : data\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const stepChange = (step) => {\r\n    return {\r\n        type: types.stepChange,\r\n        payload: step,\r\n    }\r\n}\r\n\r\nexport const menuCanvasChange = () => {\r\n    return {\r\n        type: types.menuCanvasChange,\r\n    }\r\n}\r\n\r\nexport const cartCanvasChange = () => {\r\n    return {\r\n        type: types.cartCanvasChange,\r\n    }\r\n}\r\n\r\nexport const categoryCanvasChange = () => {\r\n    return {\r\n        type: types.categoryCanvasChange,\r\n    }\r\n}\r\n\r\nexport const backdropChange = (backdrop) => {\r\n    return {\r\n        type: types.backdropChange,\r\n        payload: backdrop,\r\n    }\r\n}\r\n\r\nexport const shippingModalChange = (e) => {\r\n    return {\r\n        type: types.shippingModalChange,\r\n        payload: e\r\n    }\r\n}\r\n\r\nexport const shippingModalElegir = (e) => {\r\n    return {\r\n        type: types.shippingModalElegir,\r\n        payload: e\r\n    }\r\n}","import { types } from \"../types/types\"\r\nimport { backdropChange, cartCanvasChange } from \"./ui\"\r\n\r\n\r\nexport const cartInit = (carro) => {\r\n    return {\r\n        type: types.cartInit,\r\n        payload: carro.carrito\r\n    }\r\n}\r\n\r\nexport const productStartAdd = (product, cantidad, buy = false) => {\r\n    return (dispatch, getState) => {\r\n        const { carrito } = getState().cart;\r\n        const productIndex = carrito.findIndex(pid => pid.producto._id === product._id);\r\n        let productCart = {};\r\n        if (productIndex === -1) { // No existe el producto en el carrito y se agrega el producto entero\r\n            productCart = {\r\n                unidades: cantidad,\r\n                producto: product\r\n            }\r\n        } else { // El producto existe en el carrito y se actualizan las unidades del producto\r\n            productCart = {\r\n                //unidades: carrito[productIndex].unidades + cantidad\r\n                unidades: cantidad\r\n            }\r\n        }\r\n        dispatch(productAdd(productCart, productIndex));\r\n        if (!buy) { // Para que no salte el canvas al comprar\r\n            dispatch(backdropChange(false));\r\n            dispatch(cartCanvasChange());\r\n            const timer = setInterval(() => {\r\n                dispatch(cartCanvasChange());\r\n                dispatch(backdropChange(true));\r\n                clearInterval(timer);\r\n            }, 1500);\r\n        }\r\n    }\r\n}\r\n\r\nexport const productAdd = (product, productIndex) => {\r\n    return {\r\n        type: types.cartAdd,\r\n        payload: { product, productIndex }\r\n    }\r\n}\r\n\r\nexport const productDelete = (id) => {\r\n    return {\r\n        type: types.cartDelete,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const cartClear = () => ({ type: types.cartClear })","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { cartClear } from './cart';\r\n\r\n\r\nexport const startLogin = (correo, password, navigate) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('login', { correo, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (!body.msg) { // Cuando hay errores se retorna msg\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            localStorage.setItem('uid', body.usuario._id);\r\n\r\n            dispatch(login({\r\n                uid: body.usuario._id,\r\n                nombre: body.usuario.nombre,\r\n                correo: body.usuario.correo,\r\n                rol: body.usuario.rol,\r\n                img: body.usuario.img,\r\n                estado: body.usuario.estado\r\n            }));\r\n\r\n            const lastPath = localStorage.getItem('lastPath') || \"/\";\r\n            navigate(lastPath, { replace: true });\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startRegister = (nombre, correo, password, navigate) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('usuarios', { nombre, correo, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (!body.msg) { // Cuando hay errores se retorna msg\r\n\r\n            const resp = await fetchSinToken('login', { correo, password }, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (!body.msg) { // Cuando hay errores se retorna msg\r\n\r\n                const resp = await fetchSinToken('login', { correo, password }, 'POST');\r\n                const body = await resp.json();\r\n\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n                localStorage.setItem('uid', body.usuario._id);\r\n\r\n                dispatch(login({\r\n                    uid: body.usuario._id,\r\n                    nombre: body.usuario.nombre,\r\n                    correo: body.usuario.correo,\r\n                    rol: body.usuario.rol,\r\n                    img: body.usuario.img,\r\n                    estado: body.usuario.estado\r\n                }));\r\n\r\n                const lastPath = localStorage.getItem('lastPath') || \"/\";\r\n                navigate(lastPath, { replace: true });\r\n\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('login/renew');\r\n        const body = await resp.json();\r\n\r\n        if (!body.msg) { // Cuando hay errores se retorna msg\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                nombre: body.nombre,\r\n                correo: body.correo,\r\n                rol: body.rol,\r\n                img: body.img,\r\n                estado: body.estado\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n\r\n        dispatch(logout());\r\n        dispatch(cartClear());\r\n\r\n    }\r\n\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n\r\nexport const changeName = (nombre) => ({\r\n    type: types.changeName,\r\n    payload: nombre\r\n})\r\n\r\nexport const changeImage = (img) => ({\r\n    type: types.changeImage,\r\n    payload: img\r\n})","import { Formik, Form, useField } from 'formik';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Image, Row } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport * as Yup from 'yup';\r\n\r\nimport { startRegister } from '../../actions/auth';\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mb-2\">\r\n            <FormLabel htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = () => {\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    const handleRegister = ({ nombre, email, password, password2 }) => {\r\n        if (password !== password2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        }\r\n        dispatch(startRegister(nombre, email, password, navigate));\r\n    }\r\n\r\n    const handleShowPass = (name) => {\r\n        const x = document.querySelector(`input[name=${name}]`);\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Image\r\n                    src=\"/assets/logo_grande.png\"\r\n                    alt=\"logo\"\r\n                    className='mt-3 mt-sm-5 mb-0 mb-sm-4'\r\n                    style={{ \"cursor\": \"pointer\", \"maxWidth\": \"75%\" }}\r\n                    onClick={() => navigate(\"/\")}\r\n                    fluid\r\n                />\r\n            </div>\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: '',\r\n                    email: '',\r\n                    password: '',\r\n                    password2: '',\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    nombre: Yup.string()\r\n                        .min(2, '2 caracteres como mínimo')\r\n                        .max(20, '20 caracteres como máximo')\r\n                        .required('El nombre es obligatorio'),\r\n                    email: Yup.string()\r\n                        .email('El email es inválido')\r\n                        .required('El email es obligatorio'),\r\n                    password: Yup.string()\r\n                        .min(6, '6 caracteres como mínimo')\r\n                        .max(15, '15 caracteres como máximo')\r\n                        .required('La contraseña es obligatoria'),\r\n                    password2: Yup.string()\r\n                        .min(6, '6 caracteres como mínimo')\r\n                        .max(15, '15 caracteres como máximo')\r\n                        .required('La contraseña es obligatoria'),\r\n                })}\r\n                onSubmit={handleRegister}\r\n            >\r\n                <Form className=\"d-grid gap-2 mt-4 mb-5\">\r\n                    <h1>Crear cuenta</h1>\r\n                    <MyTextInput\r\n                        label=\"Nombre\"\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        placeholder=\"¿Cuál es tu nombre?\"\r\n                    />\r\n                    <MyTextInput\r\n                        label=\"E-mail\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"E-mail\"\r\n                    />\r\n                    <Row className='mb-3'>\r\n                        <Col xs={12} sm={6} className=\"mt-3 mt-sm-0\">\r\n                            <MyTextInput\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" onClick={() => handleShowPass(\"password\")} />\r\n                                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                                    Mostrar contraseña\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={12} sm={6} className=\"mt-3 mt-sm-0\">\r\n                            <MyTextInput\r\n                                label=\"Confirma tu contraseña\"\r\n                                name=\"password2\"\r\n                                type=\"password\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault2\" onClick={() => handleShowPass(\"password2\")} />\r\n                                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault2\">\r\n                                    Mostrar contraseña\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" variant=\"primary\" size=\"lg\">Crear cuenta</Button>\r\n                    <div className=\"position-relative my-2 text-center\">\r\n                        <hr />\r\n                        <p className=\"position-absolute top-50 start-50 translate-middle bg-white px-3\">\r\n                            Ya tengo una cuenta\r\n                        </p>\r\n                    </div>\r\n                    <Button type=\"button\" variant=\"outline-primary\" size=\"lg\" onClick={handleLogin}>Iniciar sesión</Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","import { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Image, ListGroup, Row } from 'react-bootstrap';\r\n\r\nimport { startLogin } from '../../actions/auth';\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mb-2\">\r\n            <FormLabel htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleRegister = () => {\r\n        navigate(\"/registro\");\r\n    }\r\n\r\n    const handleLogin = (values) => {\r\n        dispatch(startLogin(values.email, values.password, navigate));\r\n    }\r\n\r\n    const handleShowPass = (name) => {\r\n        const x = document.querySelector(`input[name=${name}]`);\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"text-center\">\r\n                <Image\r\n                    src=\"/assets/logo_grande.png\"\r\n                    alt=\"logo\"\r\n                    className='mt-5 mb-5'\r\n                    style={{ \"cursor\": \"pointer\", \"maxWidth\": \"75%\" }}\r\n                    onClick={() => navigate(\"/\")}\r\n                    fluid\r\n                />\r\n            </div>\r\n            <Row className='mb-5'>\r\n                <Col xs={12} lg={5} className=\"d-flex flex-column align-items-center order-2 order-lg-1\">\r\n                    <h4 className='mt-5'>Usuarios disponibles</h4>\r\n                    <ListGroup className='mt-3'>\r\n                        <ListGroup.Item className='border-0'>\r\n                            <i className=\"fa-solid fa-user-gear fa-xl\"></i>\r\n                            <b> Administrador</b>\r\n                            <div className='mt-2 ms-4'>E-mail: <span className=\"text-primary\">admin@ecommerce.com</span></div>\r\n                            <div className='ms-4'>Contraseña: <span className=\"text-primary\">123456</span></div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className='border-0'>\r\n                            <i className=\"fa-solid fa-user-plus fa-xl\"></i>\r\n                            <b> Cliente</b>\r\n                            <div className='mt-2 ms-2'>¡Crea un nuevo cliente desde cero!</div>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col xs={0} lg={1} className=\"disable-vr order-2\">\r\n                    <div className=\"vr h-100\"></div>\r\n                </Col>\r\n                <Col xs={12} lg={6} className=\"d-flex flex-column align-items-center order-1 order-lg-3\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            password: '',\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            email: Yup.string()\r\n                                .email('El email es inválido')\r\n                                .required('El email es obligatorio'),\r\n                            password: Yup.string()\r\n                                .min(6, '6 caracteres como mínimo')\r\n                                .max(15, '15 caracteres como máximo')\r\n                                .required('La contraseña es obligatoria'),\r\n                        })}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <Form className=\"auth-box-container d-grid gap-2\">\r\n                            <h1>Iniciar sesión</h1>\r\n                            <MyTextInput\r\n                                label=\"E-mail\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"E-mail\"\r\n                            />\r\n                            <MyTextInput\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                            <div className=\"form-check\" style={{ \"marginTop\": \"-8px\" }}>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" onClick={() => handleShowPass(\"password\")} />\r\n                                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                                    Mostrar contraseña\r\n                                </label>\r\n                            </div>\r\n                            <Button className=\"mt-2\" type=\"submit\" variant=\"primary\" size=\"lg\">Iniciar sesión</Button>\r\n                            <div className=\"position-relative my-2 text-center\">\r\n                                <hr />\r\n                                <p className=\"position-absolute top-50 start-50 translate-middle bg-white px-3\">\r\n                                    ¿Eres nuevo cliente?\r\n                                </p>\r\n                            </div>\r\n                            <Button type=\"button\" variant=\"outline-primary\" size=\"lg\" onClick={handleRegister}>Crear cuenta</Button>\r\n                        </Form>\r\n                    </Formik>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, ListGroup, Offcanvas } from \"react-bootstrap\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport { menuCanvasChange } from \"../../actions/ui\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\n\r\nexport const MenuCanvas = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { menuCanvas } = useSelector(state => state.ui);\r\n    const { nombre, rol, img } = useSelector(state => state.auth);\r\n\r\n    const handleClose = () => dispatch(menuCanvasChange());\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(menuCanvasChange());\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Offcanvas\r\n            show={menuCanvas}\r\n            onHide={handleClose}\r\n            placement={'end'}\r\n            scroll={true}\r\n            backdrop={true}\r\n        >\r\n            <Offcanvas.Header className=\"canvasCategoryTitle\" closeButton closeVariant=\"white\">\r\n                <Offcanvas.Title>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        {\r\n                            rol !== \"ADMIN_ROLE\"\r\n                                ? img\r\n                                    ? <div className=\"ms-2 me-3\">\r\n                                        <ReactRoundedImage\r\n                                            image={img ? img : \"/assets/no-image.png\"}\r\n                                            roundedColor=\"#49c1e1\"\r\n                                            imageWidth=\"50\"\r\n                                            imageHeight=\"50\"\r\n                                            roundedSize=\"2\"\r\n                                            borderRadius=\"15\"\r\n                                        />\r\n                                    </div>\r\n                                    : <i className=\"fa-solid fa-circle-user fa-xl ms-3 me-3\"></i>\r\n                                : <i className=\"fa-solid fa-user-gear fa-xl ms-3 me-3\"></i>\r\n                        }\r\n                        {\r\n                            nombre\r\n                                ? `Hola, ${nombre}`\r\n                                : <span\r\n                                    onClick={() => {\r\n                                        navigate(\"/login\")\r\n                                        dispatch(menuCanvasChange())\r\n                                    }}>\r\n                                    Hola, Identifícate\r\n                                </span>\r\n                        }\r\n                    </div>\r\n                </Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                {\r\n                    rol === \"USER_ROLE\"\r\n                        ? <ListGroup className=\"animate__animated animate__fadeInRight animate__faster\">\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/datos\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-user-pen fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Mis datos\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/pedidos\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-truck-fast fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Pedidos\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/valoraciones\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-star fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Valoraciones\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/deseos\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-gifts fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Lista de deseos\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        : <ListGroup className=\"animate__animated animate__fadeInRight animate__faster\">\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/usuarios\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-user-pen fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Gestión de usuarios\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/categorias\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-gifts fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Gestión de categorías\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"border-0 canvasCategoryHover\" action onClick={() => {\r\n                                navigate(\"/panel/productos\")\r\n                                dispatch(menuCanvasChange())\r\n                            }}>\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ \"width\": \"35px\" }}>\r\n                                        <i className=\"fa-solid fa-gift fa-lg me-2\"></i>\r\n                                    </div>\r\n                                    Gestión de productos\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                }\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button variant=\"danger\" className=\"mt-3\" onClick={handleLogout}><i className=\"fa-solid fa-right-from-bracket\"></i> Cerrar sesión</Button>\r\n                </div>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Offcanvas } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { cartCanvasChange } from \"../../actions/ui\";\r\n\r\n\r\nexport const CartCanvas = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { carrito } = useSelector(state => state.cart);\r\n    const { cartCanvas, backdrop } = useSelector(state => state.ui);\r\n\r\n    const getUnidades = () => { // Suma las unidades de los productos del carrito\r\n        if (carrito.length > 0) {\r\n            const unidades = carrito.reduce((n, { unidades }) => n + unidades, 0);\r\n            return unidades;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    const handleClose = () => dispatch(cartCanvasChange());\r\n\r\n    const handleClick = () => {\r\n        navigate(\"/cart\");\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Offcanvas\r\n            show={cartCanvas}\r\n            onHide={handleClose}\r\n            placement={'end'}\r\n            backdrop={backdrop}\r\n            scroll={true}\r\n        >\r\n            <Offcanvas.Header className=\"canvasCategoryTitle\" closeButton closeVariant=\"white\">\r\n                <Offcanvas.Title>\r\n                    <div className=\"ms-2\">\r\n                        MI CARRITO\r\n                    </div>\r\n                </Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                {\r\n                    carrito.length > 0\r\n                        ? <div className=\"mb-4\">\r\n                            <h5>Unidades<span className=\"float-end\">{getUnidades()}</span></h5>\r\n                            <h4>TOTAL<span className=\"float-end\">{carrito.reduce((n, { unidades, producto }) => n + unidades * producto.precio, 0).toFixed(2)} €</span></h4>\r\n                            <div className=\"d-grid gap-2 mt-4\">\r\n                                <Button className=\"mb-2\" variant=\"warning\" size=\"lg\" onClick={handleClick}>\r\n                                    Realizar Pedido\r\n                                </Button>\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                        : null\r\n                }\r\n                {\r\n                    carrito.length > 0\r\n                        ?\r\n                        carrito.map(cart => (\r\n                            <div key={cart.producto._id} className=\"row d-flex align-items-center\">\r\n                                <div className=\"col-4 text-center\">\r\n                                    <img\r\n                                        src={cart.producto.img ? cart.producto.img : \"/assets/no-image.png\"}\r\n                                        alt={cart.producto.nombre}\r\n                                        className=\"img-thumbnail\"\r\n                                        style={{ \"maxHeight\": \"8rem\" }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <Link className=\"linkProducto\" onClick={handleClose} style={{ \"fontSize\": \"20px\" }} to={`/${normalizeText(cart.producto.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(cart.producto.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(cart.producto.nombre.replace(/\\s+/g, \"-\"))}`}>{cart.producto.nombre}</Link>\r\n                                    <div><b>Unidades: {cart.unidades}</b></div>\r\n                                    <div><b>{(cart.producto.precio * cart.unidades).toFixed(2)} €</b></div>\r\n                                </div>\r\n                                <hr className=\"my-3\" />\r\n                            </div>\r\n                        ))\r\n                        :\r\n                        \"No hay artículos en tu carrito\"\r\n                }\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ListGroup, Offcanvas } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport { categoryCanvasChange } from \"../../actions/ui\";\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const CategoryCanvas = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { categoryCanvas, backdrop } = useSelector(state => state.ui);\r\n    const { nombre, rol, img } = useSelector(state => state.auth);\r\n\r\n    const [categorias, setCategorias] = useState();\r\n    const [menu, setMenu] = useState(1);\r\n    const [indexCat, setIndexCat] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken('categorias');\r\n                const body = await resp.json();\r\n                setCategorias(body.categorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        dispatch(categoryCanvasChange());\r\n        setMenu(1);\r\n    }\r\n\r\n    const handleChangeMenu = (idCat) => {\r\n        const index = categorias.findIndex(cat => cat._id === idCat);\r\n        setIndexCat(index);\r\n        setMenu(2);\r\n    }\r\n\r\n    const handleLink = (nombreSub) => {\r\n        navigate(`/${normalizeText(categorias[indexCat].nombre.replace(/\\s+/g, '-'))}/${normalizeText(nombreSub.replace(/\\s+/g, '-'))}`);\r\n        dispatch(categoryCanvasChange());\r\n        setMenu(1);\r\n    }\r\n\r\n    return (\r\n        checking &&\r\n        <Offcanvas\r\n            show={categoryCanvas}\r\n            onHide={handleClose}\r\n            backdrop={backdrop}\r\n            scroll={true}\r\n        >\r\n            <Offcanvas.Header className=\"canvasCategoryTitle\" closeButton closeVariant=\"white\">\r\n                <Offcanvas.Title>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        {\r\n                            rol !== \"ADMIN_ROLE\"\r\n                                ? img\r\n                                    ? <div className=\"ms-2 me-3\">\r\n                                        <ReactRoundedImage\r\n                                            image={img ? img : \"/assets/no-image.png\"}\r\n                                            roundedColor=\"#49c1e1\"\r\n                                            imageWidth=\"50\"\r\n                                            imageHeight=\"50\"\r\n                                            roundedSize=\"2\"\r\n                                            borderRadius=\"15\"\r\n                                        />\r\n                                    </div>\r\n                                    : <i className=\"fa-solid fa-circle-user fa-xl ms-3 me-3\"></i>\r\n                                : <i className=\"fa-solid fa-user-gear fa-xl ms-3 me-3\"></i>\r\n                        }\r\n                        {\r\n                            nombre\r\n                                ? `Hola, ${nombre}`\r\n                                : <span\r\n                                    onClick={() => {\r\n                                        navigate(\"/login\")\r\n                                        dispatch(categoryCanvasChange())\r\n                                    }}>\r\n                                    Hola, Identifícate\r\n                                </span>\r\n                        }\r\n                    </div>\r\n                </Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                {\r\n                    menu === 1\r\n                        ? <div>\r\n                            <div className=\"mb-3\">\r\n                                <strong>CATEGORÍAS</strong>\r\n                            </div>\r\n                            <ListGroup className=\"animate__animated animate__fadeInLeft\">\r\n                                {\r\n                                    categorias.map(categoria => (\r\n                                        <ListGroup.Item key={categoria._id} className=\"border-0 d-flex align-items-center canvasCategoryHover\" action onClick={() => handleChangeMenu(categoria._id)}>\r\n                                            {categoria.nombre}<i className=\"fa-solid fa-angle-right ms-auto canvasCategoryArrow\"></i>\r\n                                        </ListGroup.Item>\r\n                                    ))\r\n                                }\r\n                            </ListGroup>\r\n                        </div>\r\n                        : <div>\r\n                            <div className=\"mb-3 d-flex align-items-center\" style={{ \"cursor\": \"pointer\" }} onClick={() => setMenu(1)}>\r\n                                <b><i className=\"fa-solid fa-arrow-left mx-3\"></i>MENÚ PRINCIPAL</b>\r\n                            </div>\r\n                            <ListGroup className=\"animate__animated animate__fadeInRight animate__faster\">\r\n                                <ListGroup.Item key=\"all\" className=\"border-0 canvasCategoryHover\" action onClick={() => handleLink(\"\")}>\r\n                                    Todo en {categorias[indexCat].nombre}\r\n                                </ListGroup.Item>\r\n                                {\r\n                                    categorias[indexCat].subcategorias.map(sub => (\r\n                                        <ListGroup.Item key={sub._id} className=\"border-0 canvasCategoryHover\" action onClick={() => handleLink(sub.nombre)}>\r\n                                            {sub.nombre}\r\n                                        </ListGroup.Item>\r\n                                    ))\r\n                                }\r\n                            </ListGroup>\r\n                        </div>\r\n                }\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchSinToken } from '../../helpers/fetch';\r\n\r\n\r\nexport const Search = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [aux, setAux] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken('productos');\r\n                const body = await resp.json();\r\n                body.productos.forEach(p => {\r\n                    const item = {\r\n                        id: p._id,\r\n                        _id: p._id,\r\n                        name: p.nombre,\r\n                        nombre: p.nombre,\r\n                        categoria: p.categoria,\r\n                        subcategoria: p.subcategoria,\r\n                        img: p.img,\r\n                        precio: p.precio\r\n                    }\r\n                    setItems(items => items.concat(item));\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleOnSearch = (string, results) => {\r\n        if (string !== \"\") {\r\n            setAux(string);\r\n\r\n            const input = document.querySelector('input');\r\n\r\n            input.addEventListener(\"keyup\", function (event) {\r\n                if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    event.target.blur();\r\n                    setAux(\"\");\r\n                    navigate(`/buscar/${string}`, {\r\n                        state: {\r\n                            nombre: string,\r\n                            busqueda: results,\r\n                        },\r\n                        replace: true\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleOnSelect = (item) => {\r\n        setAux(\"\");\r\n        navigate(`/${normalizeText(item.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(item.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(item.name.replace(/\\s+/g, \"-\"))}`);\r\n    }\r\n\r\n    const formatResult = (item) => {\r\n        const product = items.find(p => p.name === item);\r\n        return <div>\r\n            <b>{item}</b>\r\n            <span style={{ \"color\": \"grey\" }}>{` en ${product.categoria.nombre}`}</span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ReactSearchAutocomplete\r\n                items={items}\r\n                onSearch={handleOnSearch}\r\n                onSelect={handleOnSelect}\r\n                formatResult={formatResult}\r\n                placeholder=\"Busca en Ecommerce...\"\r\n                inputSearchString={aux}\r\n                styling={\r\n                    {\r\n                        borderRadius: \"5px\",\r\n                        // boxShadow: \"0\",\r\n                        height: \"35px\",\r\n                        iconColor: \"black\",\r\n                        placeholderColor: \"#ADADAD\",\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Container, Image, Navbar } from \"react-bootstrap\"\r\nimport useBreadcrumbs from 'use-react-router-breadcrumbs';\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport { MenuCanvas } from \"./MenuCanvas\";\r\nimport { CartCanvas } from \"./CartCanvas\";\r\nimport { CategoryCanvas } from \"./CategoryCanvas\";\r\nimport { cartCanvasChange, categoryCanvasChange, menuCanvasChange } from \"../../actions/ui\";\r\nimport { Search } from \"../search/Search\";\r\n\r\n\r\nconst routes = [\r\n    { path: '/:CategoriaNombre/:SubCategoriaNombre/:ProductoNombre', breadcrumb: null },\r\n    { path: '/cart', breadcrumb: \"Carrito\" },\r\n    { path: '/panel', breadcrumb: \"Panel\" },\r\n    { path: '/panel/datos', breadcrumb: null },\r\n    { path: '/panel/deseos', breadcrumb: \"Deseados\" },\r\n    { path: '/buscar', breadcrumb: null },\r\n    { path: '/buscar/:Busqueda', breadcrumb: null },\r\n];\r\n\r\nexport const TopBar = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const { nombre, uid, rol, img } = useSelector(state => state.auth);\r\n    const carro = useSelector(state => state.cart);\r\n    const { carrito } = carro;\r\n\r\n    const breadcrumbs = useBreadcrumbs(routes);\r\n\r\n    useEffect(() => { // Guarda el carrito de compras en el localStorage cuando se modifica el carrito\r\n        localStorage.setItem('carrito', JSON.stringify(carro));\r\n    }, [carro]);\r\n\r\n    const handleShowMenu = () => dispatch(menuCanvasChange());\r\n    const handleShowCart = () => dispatch(cartCanvasChange());\r\n    const handleShowCategory = () => dispatch(categoryCanvasChange());\r\n\r\n    const getUnidades = () => { // Suma las unidades de los productos del carrito\r\n        if (carrito.length > 0) {\r\n            const unidades = carrito.reduce((n, { unidades }) => n + unidades, 0);\r\n            return unidades;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Navbar sticky=\"top\" bg=\"light\" style={{ \"padding\": \"0\", \"margin\": \"0\" }}>\r\n            <Container className=\"d-flex flex-column\" style={{ \"padding\": \"0\", \"margin\": \"0\" }} fluid>\r\n                <Container className=\"d-flex align-items-center\" style={{ \"height\": \"55px\" }} fluid>\r\n                    <Navbar.Brand className=\"ms-2 ms-md-4 me-4 me-md-5\">\r\n                        <Image\r\n                            className=\"navbarDisableImg\"\r\n                            style={{ \"height\": \"55px\", \"cursor\": \"pointer\" }}\r\n                            alt=\"logo\"\r\n                            src=\"/assets/logo_grande.png\"\r\n                            onClick={() => navigate(\"/\")}\r\n                        />\r\n                        <Image\r\n                            className=\"navbarEnableImg\"\r\n                            style={{ \"height\": \"55px\", \"cursor\": \"pointer\" }}\r\n                            alt=\"logo\"\r\n                            src=\"/assets/logo.png\"\r\n                            onClick={() => navigate(\"/\")}\r\n                        />\r\n                    </Navbar.Brand>\r\n                    <div className=\"d-flex flex-grow-1 ms-md-2 me-3 me-md-5\">\r\n                        <Search />\r\n                    </div>\r\n                    {\r\n                        (!!uid &&\r\n                            <div key=\"in\" className=\"d-flex align-items-center h-100 hoverFondo me-md-4 px-2 px-md-3\" style={{ \"cursor\": \"pointer\" }} onClick={handleShowMenu}>\r\n                                {\r\n                                    rol === \"USER_ROLE\"\r\n                                        ? img ? <ReactRoundedImage\r\n                                            image={img ? img : \"/assets/no-image.png\"}\r\n                                            roundedColor=\"#49c1e1\"\r\n                                            imageWidth=\"50\"\r\n                                            imageHeight=\"50\"\r\n                                            roundedSize=\"2\"\r\n                                            borderRadius=\"15\"\r\n                                        /> : <div><i className=\"fas fa-user\" style={{ \"fontSize\": \"30px\" }}></i></div>\r\n                                        : <i className=\"fa-solid fa-user-gear\" style={{ \"fontSize\": \"30px\" }}></i>\r\n                                }\r\n                                <div className=\"navbarDisable ms-2\">\r\n                                    <div style={{ \"marginBottom\": \"-5px\" }}>{`Hola ${nombre}`}</div>\r\n                                    {\r\n                                        rol === \"USER_ROLE\"\r\n                                            ? <b>Mi Cuenta</b>\r\n                                            : <b>Panel de Administración</b>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        || (!uid &&\r\n                            <div key=\"out\" className=\"d-flex align-items-center h-100 hoverFondo me-md-4 px-2 px-md-3\" style={{ \"cursor\": \"pointer\" }} onClick={() => navigate(\"/login\")}>\r\n                                <i className=\"fas fa-sign-in-alt\" style={{ \"fontSize\": \"30px\" }}></i>\r\n                                <b className=\"navbarDisable ms-2\">Identifícate</b>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className=\"d-flex align-items-center h-100 hoverFondo me-md-3 px-2 px-md-3\" style={{ \"cursor\": \"pointer\" }} onClick={handleShowCart}>\r\n                        <span className=\"fa-layers fa-fw\" style={{ \"fontSize\": \"40px\" }}>\r\n                            <i className=\"fas fa-shopping-cart\"></i>\r\n                            <span className=\"fa-layers-counter\" style={{ \"background\": \"Tomato\", \"fontSize\": \"50px\" }}>{getUnidades()}</span>\r\n                        </span>\r\n                        <b className=\"navbarDisable ms-1\">Mi Carrito</b>\r\n                    </div>\r\n                </Container>\r\n                <Container className=\"d-flex align-items-center border-top border-bottom\" style={{ \"height\": \"35px\", \"fontSize\": \"14px\" }} fluid>\r\n                    <button\r\n                        className=\"border-0 ms-2 ms-md-5 me-3 h-100 hoverFondo px-3\"\r\n                        style={{ \"backgroundColor\": \"#F8F9FA\" }}\r\n                        onClick={handleShowCategory}\r\n                    >\r\n                        <i className=\"fa-solid fa-bars fa-lg\"></i>\r\n                        <b className=\"ms-2 navbarDisable\">Todas las categorías</b>\r\n                    </button>\r\n                    {\r\n                        location.pathname !== \"/\" &&\r\n                        location.pathname !== \"/summary\" &&\r\n                        location.pathname !== \"/buscar\" &&\r\n                        breadcrumbs.map(({\r\n                            match,\r\n                            breadcrumb,\r\n                        }, index) => (\r\n                            <span key={match.pathname}>\r\n                                <NavLink to={match.pathname} className=\"linkNormal\">{breadcrumb}</NavLink>\r\n                                {\r\n                                    index < breadcrumbs.length - 1 && <span className=\"ms-1 me-1\">{\">\"}</span>\r\n                                }\r\n                            </span>\r\n                        ))\r\n                    }\r\n                    {\r\n                        rol !== \"ADMIN_ROLE\" ? <Link className=\"linkNormal ms-auto me-5 navbarDisable\" to=\"/panel/deseos\">Lista de deseos</Link> : null\r\n                    }\r\n                </Container>\r\n            </Container>\r\n            <MenuCanvas />\r\n            <CartCanvas />\r\n            <CategoryCanvas />\r\n        </Navbar>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Button, Image } from \"react-bootstrap\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\";\r\nimport { productStartAdd } from \"../../actions/cart\";\r\n\r\n\r\nexport const ProductScreen = () => {\r\n\r\n    const { ProductoNombre } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const [producto, setProducto] = useState();\r\n    const [cantidad, setCantidad] = useState(1);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken(`productos/producto/${ProductoNombre}`);\r\n                const body = await resp.json();\r\n                if (body.msg) {\r\n                    console.log(body.msg);\r\n                    // Swal.fire('Error', body.msg, 'error');\r\n                    navigate(\"/\");\r\n                } else {\r\n                    setProducto(body.producto);\r\n                    setChecking(true);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [ProductoNombre, navigate]);\r\n\r\n    const handleCart = () => {\r\n        if (producto.estado) {\r\n            if (producto.stock > 0) {\r\n                if (cantidad > 0) {\r\n                    if (cantidad <= producto.stock) {\r\n                        dispatch(productStartAdd(producto, cantidad));\r\n                    } else {\r\n                        Swal.fire('Escasez de stock', 'Su pedido es mayor al stock del artículo', 'warning');\r\n                    }\r\n                }\r\n            } else {\r\n                Swal.fire('Artículo agotado', 'El artículo estará disponible próximamente', 'warning');\r\n            }\r\n        } else {\r\n            Swal.fire('Artículo descatalogado', 'El artículo ya no está disponible', 'warning');\r\n        }\r\n    }\r\n\r\n    const handleBuy = () => {\r\n        if (producto.estado) {\r\n            if (producto.stock > 0) {\r\n                if (cantidad > 0) {\r\n                    if (cantidad <= producto.stock) {\r\n                        const productIndex = carrito.findIndex(pid => pid.producto._id === producto._id);\r\n                        if (carrito[productIndex]?.unidades === undefined) {\r\n                            dispatch(productStartAdd(producto, cantidad, true));\r\n                        }\r\n                        navigate(\"/cart\");\r\n                    } else {\r\n                        Swal.fire('Escasez de stock', 'Su pedido es mayor al stock del artículo', 'warning');\r\n                    }\r\n                }\r\n            } else {\r\n                Swal.fire('Artículo agotado', 'El artículo estará disponible próximamente', 'warning');\r\n            }\r\n        } else {\r\n            Swal.fire('Artículo descatalogado', 'El artículo ya no está disponible', 'warning');\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (cantidad >= 2) {\r\n            setCantidad(cantidad - 1)\r\n        }\r\n    }\r\n\r\n    const handleWish = async (idProducto) => {\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/deseos/${uid}`, { deseos: idProducto }, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                return Swal.fire('Inicia sesión', \"Identifícate para añadir el artículo a tu lista de deseos\", 'warning');\r\n            } else {\r\n                return Swal.fire('Artículo añadido a tu lista', \"Accede a tu lista de deseos para organizar tus compras\", 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Swal.fire('Error', error, 'error');\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (e > 0) {\r\n            setCantidad(e);\r\n        } else {\r\n            setCantidad(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12 col-lg-5 text-center\">\r\n                    <Image\r\n                        src={producto.img ? producto.img : \"/assets/no-image.png\"}\r\n                        alt={producto.nombre}\r\n                        className=\"animate__animated animate__fadeInLeft mb-5 mb-lg-0 imagenDetalleProducto\"\r\n                        fluid\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-lg-7\">\r\n                    <h3>{producto.nombre}</h3>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Rating\r\n                            className=\"me-2 mb-1\"\r\n                            style={{ \"pointerEvents\": \"none\" }}\r\n                            size={20}\r\n                            ratingValue={producto.rating}\r\n                            allowHover={false}\r\n                        />\r\n                        <div>\r\n                            {\r\n                                producto.opinion.length > 0\r\n                                    ? <a className=\"linkNormal text-muted\" href=\"#stars\">{producto.opinion.length === 1 ? `${producto.opinion.length} valoración` : `${producto.opinion.length} valoraciones`}</a>\r\n                                    : `Sin valoraciones`\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <h4 className=\"mt-2 mb-3\"><b>{producto.precio} €</b></h4>\r\n\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"fw-bold\">Detalles del producto</div>\r\n                            <div className=\"mt-2 ms-4 mb-2\" style={{ \"whiteSpace\": \"pre-wrap\" }}>{producto.descripcion}</div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"fw-bold\">Stock: </span>\r\n                            {\r\n                                producto.estado\r\n                                    ? producto.stock > 0 ? `${producto.stock} unidades`\r\n                                        : <span className=\"p-1 rounded\" style={{ \"backgroundColor\": \"#cc0000\", \"color\": \"white\", \"fontWeight\": \"bolder\" }}>Producto agotado</span>\r\n                                    : <span className=\"p-1 rounded\" style={{ \"backgroundColor\": \"#cc0000\", \"color\": \"white\", \"fontWeight\": \"bolder\" }}>Producto descatalogado</span>\r\n                            }\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"input-group mt-3 mb-1\">\r\n                        <button onClick={handleClick} className=\"border\" style={{ height: \"30px\", width: \"30px\", marginLeft: \"auto\" }}>-</button>\r\n                        <input className=\"text-center border\" type=\"text\" value={cantidad} onChange={e => handleChange(parseInt(e.target.value))} style={{ height: \"30px\", width: \"30px\" }} />\r\n                        <button onClick={() => setCantidad(cantidad + 1)} className=\"border\" style={{ height: \"30px\", width: \"30px\", marginRight: \"auto\" }}>+</button>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex gap-2 mt-4\">\r\n                        <Button className=\"flex-fill\" variant=\"outline-danger\" size=\"lg\" onClick={() => handleWish(producto._id)}>\r\n                            <i className=\"fa-solid fa-heart\"></i>\r\n                        </Button>\r\n                        <div className=\"flex-fill buttonDisable2\">\r\n                            <Button className=\"flex-fill\" variant=\"outline-dark\" size=\"lg\" onClick={handleCart}>\r\n                                <i className=\"fa-solid fa-cart-plus\"></i> Añadir al carrito\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"flex-fill buttonDisable\">\r\n                            <Button className=\"flex-fill\" variant=\"outline-dark\" size=\"lg\" onClick={handleCart}>\r\n                                <i className=\"fa-solid fa-cart-plus\"></i> Añadir\r\n                            </Button>\r\n                        </div>\r\n                        <Button className=\"flex-fill\" variant=\"warning\" size=\"lg\" onClick={handleBuy}>\r\n                            Comprar <i className=\"fa-solid fa-share\"></i>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mt-5 mb-5\" />\r\n            <div className=\"mb-5 ms-2 ms-sm-0\">\r\n                <div className=\"mb-5\">\r\n                    <h4 id=\"stars\" style={{ \"display\": \"inline\" }} className=\"me-3 align-middle\">\r\n                        {`Valoraciones (${producto.opinion.length})`}\r\n                    </h4>\r\n                    <Rating\r\n                        className=\"mt-2 mt-sm-1 me-3\"\r\n                        showTooltip\r\n                        tooltipDefaultText=\"El artículo no tiene comentarios\"\r\n                        tooltipArray={['Muy malo', 'Malo', 'Bueno', 'Muy bueno', 'Excelente']}\r\n                        tooltipStyle={{ \"background\": \"#00A3C8\", \"fontSize\": \"20px\", \"margin\": \"0\", \"marginTop\": \"6px\" }}\r\n                        style={{ \"pointerEvents\": \"none\" }}\r\n                        size={30}\r\n                        ratingValue={producto.rating}\r\n                        allowHover={false}\r\n                    />\r\n                </div>\r\n                {\r\n                    producto.opinion.map((op, index) => (\r\n                        op.usuario.estado && <div className=\"row mt-2\" key={op._id}>\r\n                            <div className=\"col-sm-12 col-md-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-2\">\r\n                                        {\r\n                                            op.usuario.rol !== \"ADMIN_ROLE\"\r\n                                                ? op.usuario.img\r\n                                                    ? <div className=\"ms-2 me-3\">\r\n                                                        <ReactRoundedImage\r\n                                                            image={op.usuario.img ? op.usuario.img : \"/assets/no-image.png\"}\r\n                                                            roundedColor=\"#49c1e1\"\r\n                                                            imageWidth=\"50\"\r\n                                                            imageHeight=\"50\"\r\n                                                            roundedSize=\"2\"\r\n                                                            borderRadius=\"15\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    : <div className=\"circulo ms-2 me-3\">\r\n                                                        <i className=\"fa-solid fa-user fa-lg\"></i>\r\n                                                    </div>\r\n                                                : <div className=\"circulo ms-2 me-3\">\r\n                                                    <i className=\"fa-solid fa-user-gear fa-lg\"></i>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-10 d-flex align-items-center\">\r\n                                        <div className=\"ms-2\" style={{ \"fontSize\": \"20px\" }}>{`${op.usuario.nombre}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12 col-md-8 mt-sm-2 mt-md-0\">\r\n                                <div className=\"comentarios\">\r\n                                    <Rating\r\n                                        style={{ \"pointerEvents\": \"none\", \"marginRight\": \"8px\" }}\r\n                                        size={20}\r\n                                        ratingValue={op.rating}\r\n                                        allowHover={false}\r\n                                    />\r\n                                    <div style={{ \"fontSize\": \"16px\" }}><b>{`${op.titulo}`}</b></div>\r\n                                </div>\r\n                                <div style={{ \"fontSize\": \"14px\" }}>{`${new Date(op.fecha).toLocaleDateString(\"es-ES\", options)}`}</div>\r\n                                <div className=\"mt-3\">{`${op.comentario}`}</div>\r\n                            </div>\r\n                            {\r\n                                (index !== producto.opinion.length - 1) && <hr className=\"mt-4\" />\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { Card, Image } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\n\r\nexport const Product = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n    //console.log(nombreCat, nombreSub);\r\n\r\n    const { nombre, precio, img, categoria, subcategoria } = props;\r\n\r\n    return (\r\n        <Card className=\"cardProduct\" onClick={() => navigate(`/${normalizeText(categoria.nombre.replace(/\\s+/g, '-'))}/${normalizeText(subcategoria.nombre.replace(/\\s+/g, '-'))}/${normalizeText(nombre.replace(/\\s+/g, \"-\"))}`)}>\r\n            <div className=\"d-flex flex-column\">\r\n                <div className=\"border-section\">\r\n                    <Image className=\"imagenCentrar\" src={img ? img : \"/assets/no-image.png\"} fluid />\r\n                </div>\r\n                <Card.Body className=\"d-flex justify-content-center\">\r\n                    <Card.Text className=\"cardName text-muted\">{nombre.charAt(0).toUpperCase() + nombre.slice(1)}</Card.Text>\r\n                    <Card.Title className=\"cardPrice\"><b>{precio} €</b></Card.Title>\r\n                </Card.Body>\r\n            </div>\r\n        </Card >\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\nimport { Product } from \"./Product\"\r\n\r\n\r\nexport const ProductList = ({ desde, limite, ordenar }) => {\r\n\r\n    const [productos, setProductos] = useState();\r\n    const [checking, setChecking] = useState(false); //useEffect no se llama hasta despues del render\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken(`productos?desde=${desde}&limite=${limite}&ordenar=${ordenar}`);\r\n                const body = await resp.json();\r\n                setProductos(body.productos);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [desde, limite, ordenar]);\r\n\r\n    return (\r\n        checking\r\n            ? <div className=\"animate__animated animate__fadeIn mb-5\">\r\n                <h4 className=\"mt-5 mb-3\"><b>{ordenar === \"-rating\" ? \"Artículos mejor valorados\" : \"Artículos más vendidos\"}</b></h4>\r\n                <Row xs={2} sm={2} md={3} lg={4} xl={4} className=\"g-0\">\r\n                    {\r\n                        productos.map(producto => (\r\n                            <Product\r\n                                key={producto._id}\r\n                                {...producto}\r\n                            />\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </div>\r\n            : <div style={{ \"height\": \"5000px\" }}></div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, FormGroup, FormLabel, FormText, Modal } from 'react-bootstrap';\r\nimport { Rating } from 'react-simple-star-rating';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-4\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const SummaryModal = ({ id, setModalShow, oldTitulo, oldComentario, oldRating, ...props }) => {\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [rating, setRating] = useState(20);\r\n\r\n    const handleRating = (rate) => {\r\n        setRating(rate);\r\n    }\r\n\r\n    const handleSubmit = async (values) => {\r\n\r\n        const enviar = await fetchConToken(`productos/${id}`, {\r\n            titulo: values.titulo,\r\n            comentario: values.comentario,\r\n            rating,\r\n            usuario: uid,\r\n            fecha: new Date(),\r\n        }, 'POST');\r\n        const bodyEnviar = await enviar.json();\r\n\r\n        if (bodyEnviar.msg) { // Si hay errores\r\n            Swal.fire('Error', bodyEnviar.msg, 'error');\r\n        } else {\r\n            setModalShow(\"\");\r\n            Swal.fire('Valoración enviada', \"Gracias por compartir su experiencia\", 'success');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                titulo: oldTitulo || '',\r\n                comentario: oldComentario || '',\r\n            }}\r\n            validationSchema={Yup.object({\r\n                titulo: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Requerido'),\r\n                comentario: Yup.string()\r\n                    .max(1000, 'Must be 1000 characters or less')\r\n                    .required('Requerido'),\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Escribir una opinión\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Valoración general</h5>\r\n                    <Rating\r\n                        onClick={handleRating}\r\n                        ratingValue={oldRating || rating}\r\n                        allowHover={false}\r\n                    />\r\n                    <Form>\r\n                        <MyTextInput\r\n                            label=\"Añade un título\"\r\n                            name=\"titulo\"\r\n                            placeholder=\"¿Qué es lo más importante?\"\r\n                        />\r\n                        <MyTextInput\r\n                            label=\"Añadir una reseña escrita\"\r\n                            name=\"comentario\"\r\n                            type=\"textarea\"\r\n                            rows=\"3\"\r\n                            placeholder=\"¿Qué te ha gustado y qué no? ¿Para qué usaste este producto?\"\r\n                        />\r\n                        <Button className=\"mt-4\" type=\"submit\" variant=\"primary\" size=\"lg\">Enviar</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n\r\nexport const invoicePdf = (nombre, resumen) => {\r\n\r\n    const fecha = resumen.fecha;\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    let rows = [];\r\n    rows.push(['Descripción', 'Cantidad', 'Precio Unitario', 'Precio Total']);\r\n    resumen.producto.map(p => rows.push([p.producto.nombre, p.unidades, p.producto.precio, (p.producto.precio * p.unidades).toFixed(2)]));\r\n\r\n    const docDefinition = {\r\n        content: [\r\n            {\r\n                text: `\\n\\n`\r\n            },\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: `\r\n                            ${nombre}\r\n                            ${resumen.direccionFacturacion.line1} ${resumen.direccionFacturacion.line2}\r\n                            ${resumen.direccionFacturacion.city} ${resumen.direccionFacturacion.state} ${resumen.direccionFacturacion.postal_code}\r\n                            ${resumen.direccionFacturacion.country}\r\n                        `,\r\n                        style: {\r\n                            fontSize: 12\r\n                        }\r\n                    },\r\n                    {\r\n\r\n                    },\r\n                    {\r\n                        table: {\r\n                            widths: [100],\r\n                            heights: [50],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: `Pagado`,\r\n                                        fillColor: '#DAF9F9',\r\n                                        style: \"pagado\"\r\n                                    },\r\n                                ]\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n                style: { lineHeight: 1.3 },\r\n            },\r\n            {\r\n                text: `\\n\\n\\n`\r\n            },\r\n            {\r\n                text: `Si tienes preguntas sobre tus pedidos, visita https://github.com/carlosbarondev`,\r\n                style: \"small\"\r\n            },\r\n            { canvas: [{ type: 'line', x1: 0, y1: 5, x2: 595 - 2 * 40, y2: 5, lineWidth: 1 }] },\r\n            {\r\n                text: `\\n`\r\n            },\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            {\r\n                                text: `Dirección de facturación`,\r\n                                style: 'subheader'\r\n                            },\r\n                            {\r\n                                text: `\r\n                                    ${nombre}\r\n                                    ${resumen.direccionFacturacion.line1} ${resumen.direccionFacturacion.line2}\r\n                                    ${resumen.direccionFacturacion.city} ${resumen.direccionFacturacion.state} ${resumen.direccionFacturacion.postal_code}\r\n                                    ${resumen.direccionFacturacion.country}\r\n                                `\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        text: [\r\n                            {\r\n                                text: `Dirección de envío`,\r\n                                style: 'subheader'\r\n                            },\r\n                            {\r\n                                text: `\r\n                                    ${resumen.direccionEnvio.name}\r\n                                    ${resumen.direccionEnvio.address.line1} ${resumen.direccionEnvio.address.line2}\r\n                                    ${resumen.direccionEnvio.address.city} ${resumen.direccionEnvio.address.state} ${resumen.direccionEnvio.address.postal_code}\r\n                                    ${resumen.direccionEnvio.address.country}\r\n                                `\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        text: [\r\n                            {\r\n                                text: `Vendido por`,\r\n                                style: 'subheader'\r\n                            },\r\n                            {\r\n                                text: `\r\n                                    ${nombre}\r\n                                    ${resumen.direccionFacturacion.line1} ${resumen.direccionFacturacion.line2}\r\n                                    ${resumen.direccionFacturacion.city} ${resumen.direccionFacturacion.state} ${resumen.direccionFacturacion.postal_code}\r\n                                    ${resumen.direccionFacturacion.country}\r\n                                `\r\n                            }\r\n                        ]\r\n                    },\r\n                ],\r\n                style: { lineHeight: 1.3 },\r\n            },\r\n            { canvas: [{ type: 'line', x1: 0, y1: 5, x2: 595 - 2 * 40, y2: 5, lineWidth: 1 }] },\r\n            {\r\n                text: `\\n`\r\n            },\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            {\r\n                                text: `Información del pedido`,\r\n                                style: 'subheader'\r\n                            },\r\n                            {\r\n                                text: `\r\n                                    Fecha del pedido: ${new Date(fecha).toLocaleDateString(\"es-ES\", options)}\r\n                                    Número del pedido: ${resumen.idPedido}\r\n                                `\r\n                            }\r\n                        ]\r\n                    },\r\n                ],\r\n                style: { lineHeight: 1.3 },\r\n            },\r\n            { canvas: [{ type: 'line', x1: 0, y1: 5, x2: 595 - 2 * 40, y2: 5, lineWidth: 1 }] },\r\n            {\r\n                text: `\\n`\r\n            },\r\n            {\r\n                text: `Detalles del documento\\n`,\r\n                style: 'header'\r\n            },\r\n            { canvas: [{ type: 'line', x1: 0, y1: 5, x2: 595 - 2 * 40, y2: 5, lineWidth: 1 }] },\r\n            {\r\n                text: `\\n`\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                table: {\r\n                    widths: [321, '*', '*', '*'],\r\n                    body: rows\r\n                }\r\n            },\r\n            {\r\n                text: `Total: ${resumen.total / 100} €`,\r\n                style: 'total'\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 12,\r\n                bold: true\r\n            },\r\n            subheader: {\r\n                fontSize: 11,\r\n                bold: true\r\n            },\r\n            total: {\r\n                fontSize: 14,\r\n                bold: true,\r\n                alignment: 'right',\r\n            },\r\n            pagado: {\r\n                fontSize: 16,\r\n                bold: true,\r\n                alignment: 'center',\r\n                margin: [0, 15, 0, 0]\r\n            },\r\n            quote: {\r\n                italics: true\r\n            },\r\n            small: {\r\n                fontSize: 8\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15]\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            }\r\n        },\r\n        defaultStyle: {\r\n            fontSize: 8,\r\n            columnGap: 75\r\n        }\r\n    };\r\n    pdfMake.createPdf(docDefinition).open();\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { SummaryModal } from \"./SummaryModal\";\r\nimport { cartClear } from \"../../../actions/cart\";\r\nimport { invoicePdf } from \"../../../helpers/invoicePdf\";\r\n\r\n\r\nexport const Summary = () => {\r\n\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { uid, nombre } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n    const [resumen, setResumen] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n\r\n            if (carrito.length > 0) { // Se ejecuta cuando el usuario llega desde la pantalla de pago\r\n\r\n                const pago = await fetchConToken(`pagos/${searchParams.get(\"payment_intent\")}`);\r\n\r\n                const bodyPago = await pago.json();\r\n\r\n                if (bodyPago.msg) { // Si hay errores\r\n                    Swal.fire('Error', bodyPago.msg, 'error');\r\n                } else {\r\n\r\n                    const usuario = await fetchConToken(`pagos/usuario/${uid}`);\r\n\r\n                    const bodyUsuario = await usuario.json();\r\n\r\n                    if (bodyUsuario.msg) { // Si hay errores\r\n                        Swal.fire('Error', bodyUsuario.msg, 'error');\r\n                    } else {\r\n\r\n                        const productoEnviar = carrito.map(prod => {\r\n                            return {\r\n                                unidades: prod.unidades,\r\n                                producto: prod.producto._id\r\n                            }\r\n                        })\r\n\r\n                        const pedido = await fetchConToken(`pedidos`, {\r\n                            idPedido: searchParams.get(\"payment_intent\"),\r\n                            usuario: uid,\r\n                            producto: productoEnviar,\r\n                            fecha: new Date(bodyPago.paymentIntent.created * 1000),\r\n                            direccionEnvio: bodyUsuario.customer.shipping,\r\n                            direccionFacturacion: bodyUsuario.customer.address,\r\n                            metodoPago: bodyPago.paymentIntent.charges.data[0].payment_method_details.card.brand,\r\n                            digitos: bodyPago.paymentIntent.charges.data[0].payment_method_details.card.last4,\r\n                            total: bodyPago.paymentIntent.amount\r\n                        }, 'POST');\r\n\r\n                        const bodyPedido = await pedido.json();\r\n\r\n                        if (bodyPedido.msg) { // Si hay errores\r\n                            Swal.fire('Error', bodyPedido.msg, 'error');\r\n                        } else {\r\n                            console.log(bodyPedido);\r\n\r\n                            setResumen(bodyPedido);\r\n                            localStorage.removeItem(\"carrito\");\r\n                            dispatch(cartClear());\r\n                            localStorage.setItem('pedido', JSON.stringify(bodyPedido));\r\n                            setChecking(true);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            } else { // Se ejecuta cuando el usuario recarga el navegador\r\n                setResumen(JSON.parse(localStorage.getItem('pedido')));\r\n                setChecking(true);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [carrito, dispatch, searchParams, uid]);\r\n\r\n    return (\r\n        checking &&\r\n        <Container className=\"animate__animated animate__fadeIn mb-5\">\r\n            <Card className=\"mt-4\">\r\n                <Card.Header as=\"h4\">\r\n                    Detalles del pedido\r\n                    <div className=\"vr ms-3 me-3\"></div>\r\n                    <button className=\"botonLink\" onClick={() => invoicePdf(nombre, resumen)}>Imprimir Factura</button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xs={12} sm={5}>\r\n                            <Card.Title>Dirección de envío</Card.Title>\r\n                            <Card.Text>\r\n                                {resumen.direccionEnvio.name}\r\n                                <br />\r\n                                {resumen.direccionEnvio.address.line1} {resumen.direccionEnvio.address.line2}\r\n                                <br />\r\n                                {resumen.direccionEnvio.address.postal_code}\r\n                                <br />\r\n                                {resumen.direccionEnvio.address.city} {resumen.direccionEnvio.address.state}\r\n                                <br />\r\n                                {resumen.direccionEnvio.address.country}\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col xs={12} sm={5} className=\"mt-4 mt-sm-0\">\r\n                            <Card.Title>Método de pago</Card.Title>\r\n                            <Card.Text>\r\n                                <Image className=\"mg-fluid\" style={{ \"height\": \"25px\" }} src=\"https://images-na.ssl-images-amazon.com/images/G/30/checkout/payselect/card-logos-small/visa._CB658923706_.gif\" />\r\n                                <span> **** {resumen.digitos}</span>\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col xs={12} sm={2} className=\"mt-4 mt-sm-0\">\r\n                            <Card.Title>Importe total:</Card.Title>\r\n                            <Card.Text>\r\n                                <b>EUR {resumen.total / 100}</b>\r\n                            </Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n            {\r\n                resumen.producto.map(prod => (\r\n                    <Card key={prod.producto._id} className=\"justify-content-center\">\r\n                        <Card.Body>\r\n                            <Row className=\"align-items-center\">\r\n                                <Col xs={3} sm={3} md={2} className=\"text-center\">\r\n                                    <Image style={{ \"maxHeight\": \"8rem\" }} src={prod.producto.img ? prod.producto.img : \"/assets/no-image.png\"} fluid />\r\n                                </Col>\r\n                                <Col xs={9} sm={9} md={4}>\r\n                                    <Link className=\"linkProducto\" style={{ \"fontSize\": \"18px\" }} to={`/${normalizeText(prod.producto.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.producto.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.producto.nombre.replace(/\\s+/g, \"-\"))}`}>{prod.producto.nombre}</Link>\r\n                                    <div style={{ \"fontWeight\": \"normal\", \"fontSize\": \"14px\" }}>Cantidad: {prod.unidades}</div>\r\n                                    <b>{(prod.producto.precio * prod.unidades).toFixed(2)} €</b>\r\n                                </Col>\r\n                                <Col xs={12} sm={12} md={6} className=\"text-center mt-3\">\r\n                                    <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={() => setModalShow(prod.producto._id)}\r\n                                    >\r\n                                        Escribir una opinión sobre el producto\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <SummaryModal\r\n                                id={prod.producto._id}\r\n                                setModalShow={setModalShow}\r\n                                show={modalShow === prod.producto._id}\r\n                                onHide={() => setModalShow(\"\")}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))\r\n            }\r\n            <Button variant=\"warning\" size=\"lg\" onClick={() => navigate(\"/\")} className=\"float-end mt-5 mb-5\">Seguir comprando</Button>\r\n        </Container>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { stepChange } from \"../../actions/ui\";\r\nimport { cartClear, productDelete, productStartAdd } from \"../../actions/cart\";\r\n\r\n\r\nexport const CartScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { rol } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let cont = 0;\r\n        carrito.map(producto => cont += producto.unidades);\r\n        setTotal(cont);\r\n    }, [carrito]);\r\n\r\n    const handleAdd = (producto, unidades) => {\r\n        dispatch(productStartAdd(producto, unidades + 1, true));\r\n    }\r\n\r\n    const handleSubtract = (producto, unidades) => {\r\n        if (unidades >= 2) {\r\n            dispatch(productStartAdd(producto, unidades - 1, true));\r\n        }\r\n    }\r\n\r\n    const handleChange = (e, producto) => {\r\n        if (e > 0) {\r\n            dispatch(productStartAdd(producto, e, true));\r\n        } else {\r\n            dispatch(productStartAdd(producto, 1, true));\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(productDelete(id));\r\n    }\r\n\r\n    const handleClear = () => {\r\n        dispatch(cartClear());\r\n        Swal.fire('Cesta vaciada', \"No hay artículos en tu carrito\", 'success');\r\n    }\r\n\r\n    const handleStart = () => {\r\n        if (rol !== \"ADMIN_ROLE\") {\r\n            dispatch(stepChange(2));\r\n            localStorage.setItem('step', 2);\r\n            navigate(\"/shipping\");\r\n        } else {\r\n            Swal.fire('Login', \"Debe cerrar la sesión de Administrador y acceder como cliente\", 'info');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <div className=\"mt-5 mb-2\" style={{ \"fontSize\": \"22px\" }}><b>{`(${total})`}</b> {total !== 1 ? \"Artículos\" : \"Artículo\"} en <b>tu cesta</b></div>\r\n            <Row>\r\n                <Col md={12} lg={8}>\r\n                    <Card>\r\n                        <Card.Header as=\"h5\" className=\"disable-card-header\">\r\n                            <Row className=\"align-items-center text-center\">\r\n                                <Col md={2}>\r\n                                    <Card.Text>\r\n                                        Artículo\r\n                                    </Card.Text>\r\n                                </Col>\r\n                                <Col md={5}>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card.Text>\r\n                                        Unidades\r\n                                    </Card.Text>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Card.Text>\r\n                                        Total\r\n                                    </Card.Text>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Header>\r\n                        <Card.Header as=\"h5\" className=\"enable-card-header\">\r\n                            <Row className=\"align-items-center\">\r\n                                <Card.Text>\r\n                                    Artículo\r\n                                </Card.Text>\r\n                            </Row>\r\n                        </Card.Header>\r\n                    </Card>\r\n                    <TransitionGroup className=\"todo-list\">\r\n                        {\r\n                            carrito.map(cart => (\r\n                                <CSSTransition\r\n                                    key={cart.producto._id}\r\n                                    timeout={500}\r\n                                    classNames=\"item\"\r\n                                >\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            <Row className=\"align-items-center\">\r\n                                                <Col xs={2} sm={2} md={2} className=\"text-center\">\r\n                                                    <Image src={cart.producto.img ? cart.producto.img : \"/assets/no-image.png\"} style={{ \"maxHeight\": \"8rem\" }} fluid />\r\n                                                </Col>\r\n                                                <Col xs={10} sm={10} md={5}>\r\n                                                    <Link className=\"linkProducto\" style={{ \"fontSize\": \"20px\" }} to={`/${normalizeText(cart.producto.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(cart.producto.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(cart.producto.nombre.replace(/\\s+/g, \"-\"))}`}>{cart.producto.nombre}</Link>\r\n                                                    <div>{cart.producto.precio} €</div>\r\n                                                    <button className=\"botonLinkProducto mt-2\" onClick={() => handleDelete(cart.producto._id)}>Eliminar</button>\r\n                                                </Col>\r\n                                                <Col xs={6} sm={8} md={3}>\r\n                                                    <div className=\"input-group mt-2\">\r\n                                                        <button onClick={() => handleSubtract(cart.producto, cart.unidades)} className=\"border\" style={{ height: \"30px\", width: \"30px\", marginLeft: \"auto\" }}>-</button>\r\n                                                        <input className=\"text-center border\" type=\"text\" value={cart.unidades} onChange={e => handleChange(parseInt(e.target.value), cart.producto)} style={{ height: \"30px\", width: \"30px\" }} />\r\n                                                        <button onClick={() => handleAdd(cart.producto, cart.unidades)} className=\"border\" style={{ height: \"30px\", width: \"30px\", marginRight: \"auto\" }}>+</button>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={6} sm={4} md={2} className=\"text-center\">\r\n                                                    <Card.Text className=\"mt-2\">\r\n                                                        <span className=\"enable-span\">Total:&nbsp;</span>{(cart.producto.precio * cart.unidades).toFixed(2)} €\r\n                                                    </Card.Text>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </CSSTransition>\r\n                            ))\r\n                        }\r\n                    </TransitionGroup>\r\n                    <div className=\"mt-3 mb-5\">\r\n                        <Button variant=\"outline-secondary\" onClick={handleClear}><i className=\"fa-solid fa-trash\"></i> Vaciar cesta</Button>\r\n                        <Button variant=\"outline-secondary\" onClick={() => navigate(\"/\")} className=\"float-end\">Seguir comprando</Button>\r\n                    </div>\r\n                </Col>\r\n                <Col md={12} lg={4}>\r\n                    <Card className=\"mb-5\">\r\n                        <Card.Header as=\"h5\" className=\"text-center\">TOTAL</Card.Header>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Card.Title>{carrito.reduce((n, { unidades, producto }) => n + unidades * producto.precio, 0).toFixed(2)} €</Card.Title>\r\n                            <div className=\"mt-4 d-grid gap-2\">\r\n                                <Button className=\"mt-1\" variant=\"warning\" size=\"lg\" onClick={handleStart}>\r\n                                    Realizar Pedido\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { Navigate, useLocation } from \"react-router-dom\";\r\n\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, children }) => {\r\n\r\n    const { pathname, search } = useLocation();\r\n    localStorage.setItem('lastPath', pathname + search);\r\n\r\n    return isAuthenticated\r\n        ? children\r\n        : <Navigate to=\"/login\" replace={true} />\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { Card, Image } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\n\r\nexport const SubCategory = (children) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { nombre, img, CategoriaNombre } = children;\r\n\r\n    return (\r\n        <Card className=\"cardCategory\" onClick={() => navigate(`/${normalizeText(CategoriaNombre.replace(/\\s+/g, '-'))}/${normalizeText(nombre.replace(/\\s+/g, '-'))}`, {\r\n            state: {\r\n                nombreCat: CategoriaNombre,\r\n                nombreSub: nombre\r\n            }\r\n        })}>\r\n            <div className=\"d-flex flex-column\">\r\n                <div className=\"border-section-category\">\r\n                    <Image className=\"imagenCentrar\" src={img ? img : \"/assets/no-image.png\"} fluid />\r\n                </div>\r\n                <Card.Body className=\"d-flex justify-content-center\">\r\n                    <Card.Title className=\"cardCategoryBody\">{nombre.charAt(0).toUpperCase() + nombre.slice(1)}</Card.Title>\r\n                </Card.Body>\r\n            </div>\r\n        </Card >\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\nimport { Product } from \"./Product\"\r\n\r\n\r\nexport const ProductListBest = ({ categoria }) => {\r\n\r\n    const [productos, setProductos] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken(`productos/mejor/?desde=0&limite=8&categoria=${categoria}&ordenar=${\"-vendido\"}`);\r\n                const body = await resp.json();\r\n                setProductos(body.productos);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [categoria]);\r\n\r\n    return (\r\n        checking\r\n            ? <div className=\"animate__animated animate__fadeIn mb-5\">\r\n                <h4 className=\"mt-5 mb-4\">Artículos más vendidos en <b>{categoria.replace(/-/g, \" \")}</b></h4>\r\n                <Row xs={2} sm={2} md={3} lg={4} xl={4} className=\"g-0\">\r\n                    {\r\n                        productos.map(producto => (\r\n                            <Product\r\n                                key={producto._id}\r\n                                {...producto}\r\n                            />\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </div>\r\n            : <div style={{ \"height\": \"5000px\" }}></div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\nimport { SubCategory } from \"./SubCategory\";\r\nimport { ProductListBest } from \"./ProductListBest\";\r\n\r\n\r\nexport const SubCategoryList = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { CategoriaNombre } = useParams();\r\n\r\n    const [subcategorias, setSubcategorias] = useState();\r\n    const [nombre, setNombre] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken(`categorias/${CategoriaNombre.replace(/-/g, \" \")}?visibles=true`);\r\n                const body = await resp.json();\r\n                const { categoria } = body;\r\n                setNombre(categoria.nombre);\r\n                setSubcategorias(categoria.subcategorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [CategoriaNombre, navigate]);\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn\">\r\n            <h4 className=\"mt-4 mb-3\">Categorías en <b>{nombre}</b></h4>\r\n            <Row xs={2} sm={3} md={4} lg={5} xl={5} className=\"g-0\">\r\n                {\r\n                    subcategorias.map(subcategoria => (\r\n                        <SubCategory\r\n                            key={subcategoria._id}\r\n                            CategoriaNombre={CategoriaNombre}\r\n                            {...subcategoria}\r\n                        />\r\n                    ))\r\n                }\r\n            </Row>\r\n            <ProductListBest categoria={nombre} />\r\n        </div>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { Card, Image } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nexport const Category = (children) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { nombre, img } = children;\r\n\r\n    return (\r\n        <Card className=\"cardCategory\" onClick={() => navigate(`/${normalizeText(nombre.replace(/\\s+/g, '-'))}`, {\r\n            state: nombre\r\n        })}>\r\n            <div className=\"d-flex flex-column\">\r\n                <div className=\"border-section-category\">\r\n                    <Image className=\"imagenCentrar\" src={img ? img : \"/assets/no-image.png\"} fluid />\r\n                </div>\r\n                <Card.Body className=\"d-flex justify-content-center\">\r\n                    <Card.Title className=\"cardCategoryBody\">{nombre.charAt(0).toUpperCase() + nombre.slice(1)}</Card.Title>\r\n                </Card.Body>\r\n            </div>\r\n        </Card >\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\nimport { Category } from \"./Category\";\r\nimport { categoryCanvasChange } from \"../../actions/ui\";\r\n\r\n\r\nexport const CategoryList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [categorias, setCategorias] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken('categorias?desde=0&limite=5');\r\n                const body = await resp.json();\r\n                setCategorias(body.categorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleShowCategory = () => dispatch(categoryCanvasChange());\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn\">\r\n            <h4 className=\"mt-3 mb-3\">\r\n                <b>Categorías destacadas</b>\r\n                <button className=\"botonLinkProducto ms-2\" style={{ \"fontSize\": \"16px\" }} onClick={handleShowCategory}>Ver más</button>\r\n            </h4>\r\n            <Row xs={2} sm={3} md={4} lg={5} xl={5} className=\"g-0\">\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <Category\r\n                            key={categoria._id}\r\n                            {...categoria}\r\n                        />\r\n                    ))\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { fetchSinToken } from \"../../helpers/fetch\";\r\nimport { Product } from \"./Product\";\r\n\r\n\r\nexport const SubCategoryScreen = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { SubCategoriaNombre } = useParams();\r\n\r\n    const [productos, setProductos] = useState();\r\n    const [nombre, setNombre] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchSinToken(`categorias/subcategoria/${SubCategoriaNombre.replace(/-/g, \" \")}`);\r\n                const body = await resp.json();\r\n                setNombre(body.subcategoria.nombre);\r\n                setProductos(body.subcategoria.productos);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [SubCategoriaNombre, navigate]);\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn\">\r\n            <h4 className=\"mt-4 mb-3\"><b>{nombre}</b></h4>\r\n            <Row xs={2} sm={2} md={3} lg={4} xl={4} className=\"g-0\">\r\n                {\r\n                    productos.map(producto => (\r\n                        <Product\r\n                            key={producto._id}\r\n                            nombreCat={producto.categoria}\r\n                            nombreSub={producto.subcategoria}\r\n                            {...producto}\r\n                        />\r\n                    ))\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\n\r\nexport const CarouselHome = () => {\r\n    return <Carousel variant=\"dark\" className=\"animate__animated animate__fadeIn navbarDisable mb-5\">\r\n        <Carousel.Item>\r\n            <Link to={`/${normalizeText(\"Electronica\".replace(/\\s+/g, '-'))}/${normalizeText(\"Tablets\".replace(/\\s+/g, '-'))}/${normalizeText(\"Samsung Galaxy Tab S8 Ultra\".replace(/\\s+/g, \"-\"))}`}>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/assets/tab.jpeg\"\r\n                    alt=\"First slide\"\r\n                />\r\n            </Link>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <Link to={`/${normalizeText(\"Electronica\".replace(/\\s+/g, '-'))}/${normalizeText(\"Auriculares\".replace(/\\s+/g, '-'))}/${normalizeText(\"Apple AirPods (3.ª generación)\".replace(/\\s+/g, \"-\"))}`}>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/assets/airpods.jpg\"\r\n                    alt=\"Second slide\"\r\n                />\r\n            </Link>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <Link to={`/${normalizeText(\"Informatica\".replace(/\\s+/g, '-'))}/${normalizeText(\"Portatiles\".replace(/\\s+/g, '-'))}/${normalizeText(\"Apple MacBook Pro\".replace(/\\s+/g, \"-\"))}`}>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/assets/macbook.jpg\"\r\n                    alt=\"Third slide\"\r\n                />\r\n            </Link>\r\n        </Carousel.Item>\r\n    </Carousel>\r\n};","import { Navigate, useLocation } from \"react-router-dom\";\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nimport { Product } from \"../products/Product\";\r\n\r\n\r\nexport const SearchList = () => {\r\n\r\n    const location = useLocation();\r\n    const nombre = location.state?.nombre;\r\n    const busqueda = location.state?.busqueda;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                busqueda\r\n                    ? <div className=\"animate__animated animate__fadeIn\">\r\n                        <h4 className=\"mt-5 mb-4\"><b>{`Resultados de búsqueda para \"${nombre}\" (${busqueda.length})`}</b></h4>\r\n                        <Row xs={2} sm={2} md={3} lg={4} xl={4} className=\"g-0\">\r\n                            {\r\n                                busqueda.map(producto => (\r\n                                    <Product\r\n                                        key={producto._id}\r\n                                        {...producto}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Row>\r\n                    </div>\r\n                    : <Navigate to=\"/\" replace={true} />\r\n            }\r\n        </>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { Image } from \"react-bootstrap\"\r\n\r\n\r\nexport const Footer = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <footer className=\"row row-cols-4 py-5 mt-auto border-top d-flex justify-content-around align-items-center animate__animated animate__fadeIn\" style={{ \"backgroundColor\": \"#f8f9fa\", \"overflow\": \"hidden\", \"padding\": \"0\", \"margin\": \"0\" }}>\r\n\r\n            <div className=\"col-12 col-lg-4 mb-5 mb-lg-0\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <Image\r\n                        src=\"/assets/logo_grande.png\"\r\n                        alt=\"logo\"\r\n                        style={{ \"cursor\": \"pointer\", \"maxWidth\": \"50%\" }}\r\n                        onClick={() => navigate(\"/\")}\r\n                        fluid\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-4 col-lg-2 d-flex flex-column justify-content-center align-items-center\">\r\n                <h5>Documentación</h5>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\"><a href=\"https://github.com/carlosbarondev/ecommerce-backend\" className=\"nav-link p-0 linkFooter text-muted\">Backend</a></li>\r\n                    <li className=\"nav-item mb-2\"><a href=\"https://github.com/carlosbarondev/ecommerce-frontend\" className=\"nav-link p-0 linkFooter text-muted\">Frontend</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"col-4 col-lg-2 d-flex flex-column justify-content-center align-items-center\">\r\n                <h5>Contacto</h5>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\"><a href=\"mailto:carlosbarondev@gmail.com\" className=\"nav-link p-0 linkFooter text-muted\">Correo</a></li>\r\n                    <li className=\"nav-item mb-2\"><a href=\"https://github.com/carlosbarondev\" className=\"nav-link p-0 linkFooter text-muted\">GitHub</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-4 mt-5 mt-sm-0\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <a className=\"linkFooter text-muted\" href=\"https://github.com/carlosbarondev\">carlosbarondev &copy; 2022</a>\r\n                </div>\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { Col, Image, Row } from \"react-bootstrap\"\r\nimport { normalizeText } from 'normalize-text';\r\n\r\n\r\nexport const ImagesHome = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"navbarDisable\">\r\n            <Row className=\"animate__animated animate__fadeIn\">\r\n                <Col xs={4}>\r\n                    <Image\r\n                        src=\"/assets/small_xiaomi.webp\"\r\n                        fluid\r\n                        style={{ \"cursor\": \"pointer\" }}\r\n                        alt=\"xiaomi\"\r\n                        onClick={() => navigate(`/${normalizeText(\"Smartphones\".replace(/\\s+/g, '-'))}/${normalizeText(\"Xiaomi\".replace(/\\s+/g, '-'))}`, {\r\n                            state: {\r\n                                nombreCat: \"Electrónica\",\r\n                                nombreSub: \"Smartphones\"\r\n                            }\r\n                        })}\r\n                    />\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <Image\r\n                        src=\"/assets/small_reloj.webp\"\r\n                        fluid\r\n                        style={{ \"cursor\": \"pointer\" }}\r\n                        alt=\"smartwatch\"\r\n                        onClick={() => navigate(`/${normalizeText(\"Electrónica\".replace(/\\s+/g, '-'))}/${normalizeText(\"Relojes Inteligentes\".replace(/\\s+/g, '-'))}`, {\r\n                            state: {\r\n                                nombreCat: \"Electrónica\",\r\n                                nombreSub: \"Relojes Inteligentes\"\r\n                            }\r\n                        })}\r\n                    />\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <Image\r\n                        src=\"/assets/small_auriculares.webp\"\r\n                        fluid\r\n                        style={{ \"cursor\": \"pointer\" }}\r\n                        alt=\"auriculares\"\r\n                        onClick={() => navigate(`/${normalizeText(\"Electrónica\".replace(/\\s+/g, '-'))}/${normalizeText(\"Auriculares\".replace(/\\s+/g, '-'))}`, {\r\n                            state: {\r\n                                nombreCat: \"Electrónica\",\r\n                                nombreSub: \"Auriculares\"\r\n                            }\r\n                        })}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport { TopBar } from '../components/ui/TopBar';\r\nimport { ProductScreen } from '../components/products/ProductScreen';\r\nimport { ProductList } from '../components/products/ProductList';\r\nimport { Summary } from '../components/cart/summary/Summary';\r\nimport { CartScreen } from '../components/cart/CartScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { SubCategoryList } from '../components/products/SubCategoryList';\r\nimport { CategoryList } from '../components/products/CategoryList';\r\nimport { SubCategoryScreen } from '../components/products/SubCategoryScreen';\r\nimport { CarouselHome } from '../components/products/CarouselHome';\r\nimport { SearchList } from '../components/search/SearchList';\r\nimport { Footer } from '../components/ui/Footer';\r\nimport { ImagesHome } from '../components/products/ImagesHome';\r\n\r\n\r\nexport const HomeRouter = () => {\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const { pathname, search } = useLocation();\r\n    localStorage.setItem('lastPath', pathname + search);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column min-vh-100\">\r\n\r\n            <TopBar />\r\n\r\n            <Container>\r\n\r\n                <Routes>\r\n\r\n                    <Route path=\"/:CategoriaNombre\" element={<SubCategoryList />} />\r\n\r\n                    <Route path=\"/:CategoriaNombre/:SubCategoriaNombre\" element={<SubCategoryScreen />} />\r\n\r\n                    <Route path=\"/:CategoriaNombre/:SubCategoriaNombre/:ProductoNombre\" element={<ProductScreen />} />\r\n\r\n                    <Route path=\"/buscar/:Busqueda\" element={<SearchList />} />\r\n\r\n                    <Route path=\"cart\" element={\r\n                        <>\r\n                            {\r\n                                carrito.length > 0\r\n                                    ? <CartScreen />\r\n                                    : <Navigate to=\"/\" replace={true} />\r\n                            }\r\n                        </>\r\n                    } />\r\n\r\n                    <Route\r\n                        path=\"/cart/*\"\r\n                        element={<Navigate to=\"/\" />}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"summary\"\r\n                        element={\r\n                            <PrivateRoute isAuthenticated={!!uid}>\r\n                                <Summary />\r\n                            </PrivateRoute>\r\n                        }\r\n                    />\r\n\r\n                    <Route path=\"/\" element={\r\n                        <>\r\n                            <CarouselHome />\r\n                            <CategoryList />\r\n                            <ProductList desde={0} limite={4} ordenar=\"-rating\" />\r\n                            <ImagesHome />\r\n                            <ProductList desde={0} limite={8} ordenar=\"-vendido\" />\r\n                        </>\r\n                    }\r\n                    />\r\n\r\n                    <Route path=\"/*\" element={<Navigate to=\"/\" />} />\r\n\r\n                </Routes>\r\n\r\n            </Container>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport const MenuPanel = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn mt-4\">\r\n            <h5>Mi cuenta</h5>\r\n            <div className=\"list-group\">\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/datos\")}>Mis datos</button>\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/pedidos\")}>Pedidos</button>\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/valoraciones\")}>Valoraciones</button>\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/deseos\")}>Lista de deseos</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"./fetch\";\r\n\r\nexport const imageUpload = async (event, id, coleccion) => {\r\n\r\n    if (event.target.files) {\r\n\r\n        try {\r\n\r\n            const files = event.target.files;\r\n            const formData = new FormData();\r\n            formData.append('archivo', files[0]);\r\n\r\n            const enviar = await fetchConToken(`uploads/${coleccion}/${id}`, formData, 'PUT', true);\r\n            const body = await enviar.json();\r\n\r\n            return body;\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Swal.fire('Error', '', 'error');\r\n        }\r\n\r\n    }\r\n\r\n}","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Formik, useField } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { changeImage, changeName } from \"../../../actions/auth\";\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const Data = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { nombre, uid, img } = useSelector(state => state.auth);\r\n\r\n    const [fileUpload, setFileUpload] = useState();\r\n\r\n    const postData = async (nombre, password) => {\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/${uid}`, {\r\n                nombre,\r\n                password\r\n            }, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                return Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                dispatch(changeName(nombre));\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n                return Swal.fire('Datos actualizados', '', 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Swal.fire('Error', error.message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (values) => {\r\n        if (values.password !== values.password2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        } else {\r\n            try {\r\n                if (fileUpload) { // Actualizar la imagen en el token antes de recibirlo\r\n                    handleUploadImage(values.nombre, values.password);\r\n                } else {\r\n                    postData(values.nombre, values.password);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUploadImage = async (nombre, password) => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, uid, \"usuarios\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        dispatch(changeImage(data.img));\r\n                        setFileUpload();\r\n                        postData(nombre, password);\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error.message, 'error'));\r\n        }\r\n    }\r\n\r\n    const handleDeleteImage = async () => {\r\n        if (img) {\r\n            try {\r\n                const resp = await fetchConToken(`usuarios/${uid}`, {\r\n                    img: \"\"\r\n                }, 'PUT');\r\n                const body = await resp.json();\r\n                if (body.msg) {\r\n                    return Swal.fire('Error', body.msg, 'error');\r\n                } else {\r\n                    dispatch(changeImage(\"\"));\r\n                    localStorage.setItem('token', body.token);\r\n                    localStorage.setItem('token-init-date', new Date().getTime());\r\n                    return Swal.fire('Imagen eliminada', '', 'success');\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        } else {\r\n            return Swal.fire('Error', \"No ha subido ninguna imagen\", 'error');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3>Mis Datos</h3>\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: nombre || '',\r\n                    password: '',\r\n                    password2: '',\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    nombre: Yup.string()\r\n                        .min(2, '2 caracteres como mínimo')\r\n                        .max(20, '20 caracteres como máximo'),\r\n                    password: Yup.string()\r\n                        .min(6, '6 caracteres como mínimo')\r\n                        .max(15, '15 caracteres como máximo'),\r\n                    password2: Yup.string()\r\n                        .min(6, '6 caracteres como mínimo')\r\n                        .max(15, '15 caracteres como máximo')\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Form className=\"mt-3\">\r\n                    <Row>\r\n                        <Col xs={12} md={6} className=\"mt-auto\">\r\n                            <MyTextInput\r\n                                label=\"Nombre\"\r\n                                name=\"nombre\"\r\n                            />\r\n                        </Col>\r\n                        <Col xs={12} md={6} className=\"d-flex justify-content-center align-items-center mt-4 mt-md-0\">\r\n                            {\r\n                                img\r\n                                    ? <ReactRoundedImage\r\n                                        image={img ? img : \"/assets/no-image.png\"}\r\n                                        roundedColor=\"#49c1e1\"\r\n                                        imageWidth=\"150\"\r\n                                        imageHeight=\"150\"\r\n                                        roundedSize=\"4\"\r\n                                        borderRadius=\"15\"\r\n                                    />\r\n                                    : <div className=\"mt-5\"><i className=\"fa-solid fa-circle-user fa-2xl\" style={{ \"fontSize\": \"70px\" }}></i></div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        <Col className=\"mt-auto\">\r\n                            <FormGroup id=\"fileUpload\" controlId=\"formFile\">\r\n                                <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                                <FormControl\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={(event) => setFileUpload(event)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mt-auto\">\r\n                            <div className=\"d-grid\">\r\n                                <Button onClick={() => handleDeleteImage()} disabled={img === \"\" || !img ? true : false}>\r\n                                    Eliminar imagen\r\n                                </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3\">\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Nueva contraseña\"\r\n                                name=\"password\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Repetir contraseña\"\r\n                                name=\"password2\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"d-grid mt-4\">\r\n                        <Button type=\"submit\">\r\n                            Actualizar\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n};","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Card, Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { productStartAdd } from \"../../../actions/cart\";\r\n\r\n\r\nexport const Wishes = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const [deseos, setDeseos] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n    const [seleccionados, setSeleccionados] = useState(0);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`usuarios/deseos/${uid}`);\r\n                const body = await resp.json();\r\n                if (body.msg) {\r\n                    return Swal.fire('Error', body.msg, 'error');\r\n                } else {\r\n                    setDeseos(body.deseos.deseos);\r\n                    setChecking(true);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [checking, uid]);\r\n\r\n    const handleSelect = (id) => {\r\n        document.getElementById(id).checked ? document.getElementById(id).checked = false : document.getElementById(id).checked = true;\r\n        const checked = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n        setSeleccionados(checked.length);\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        let nav = true;\r\n        const checked = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n        if (checked.length === 0) {\r\n            return Swal.fire('¡Atención!', \"No ha seleccionado ningún artículo\", 'info');\r\n        }\r\n        const ids = Array.from(checked).map(x => x.id);\r\n        const addProduct = deseos.filter(p => ids.find(x => x === p._id));\r\n        addProduct.forEach(wish => {\r\n            if (wish.estado) {\r\n                if (wish.stock > 0) {\r\n                    const cartProduct = carrito.find(x => x.producto._id === wish._id);\r\n                    if (cartProduct) {\r\n                        dispatch(productStartAdd(wish, cartProduct.unidades + 1, true));\r\n                    } else {\r\n                        dispatch(productStartAdd(wish, 1, true));\r\n                    }\r\n                } else {\r\n                    nav = false;\r\n                    return Swal.fire('Artículo agotado', `${wish.nombre} estará disponible próximamente`, 'warning');\r\n                }\r\n            } else {\r\n                nav = false;\r\n                return Swal.fire('Artículo descatalogado', `${wish.nombre} ya no está disponible`, 'warning');\r\n            }\r\n        });\r\n        nav && navigate(\"/cart\");\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n\r\n        const checked = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n        if (checked.length === 0) {\r\n            return Swal.fire('¡Atención!', \"No ha seleccionado ningún artículo\", 'info');\r\n        }\r\n        const ids = Array.from(checked).map(x => x.id);\r\n\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/deseos/${uid}`, { ids }, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                return Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                setDeseos(body.usuario.deseos);\r\n                setSeleccionados(0);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Swal.fire('Error', error.message, 'error');\r\n        }\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mb-5\">\r\n            <h3 className=\"mt-4 mb-4\">Lista de deseos</h3>\r\n            {\r\n                deseos.length === 0\r\n                    ? <div className=\"centrar mt-5\">\r\n                        <b>No ha añadido ningún producto a la lista</b>\r\n                        <div>De momento no tienes ningún producto deseado,</div>\r\n                        <div>pero te animamos a ver nuestro catálogo de</div>\r\n                        <div>productos y añadirlos a tu lista de deseados</div>\r\n                        <Button className=\"mt-3\" variant=\"warning\" onClick={() => navigate(`/`)}>Ver el catálogo</Button>\r\n                    </div>\r\n                    : <Form>\r\n                        <Row className=\"mb-4\">\r\n                            <Col xs={12} sm={4} md={5} lg={7} xl={8} className=\"mb-4 mb-sm-0\">\r\n                                <h5 className=\"mt-auto mb-auto me-auto\">Seleccionados: {seleccionados}</h5>\r\n                            </Col>\r\n                            <Col xs={12} sm={8} md={7} lg={5} xl={4} className=\"d-flex justify-content-evenly\">\r\n                                <Button\r\n                                    variant=\"outline-dark\"\r\n                                    onClick={handleAdd}\r\n                                >\r\n                                    Añadir al carrito\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"outline-dark\"\r\n                                    onClick={handleDelete}\r\n                                >\r\n                                    Eliminar de la lista\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row xs={2} sm={2} md={3} lg={4} xl={4} className=\"g-0\">\r\n                            <TransitionGroup className=\"todo-list border\" component={null}>\r\n                                {\r\n                                    deseos.map(wish => (\r\n                                        <CSSTransition\r\n                                            key={wish._id}\r\n                                            timeout={500}\r\n                                            classNames=\"item\"\r\n                                        >\r\n                                            <Card\r\n                                                className=\"cardProduct\"\r\n                                                style={{ \"transform\": \"none\" }}\r\n                                                onClick={() => handleSelect(wish._id)}\r\n                                            >\r\n                                                <Form.Check\r\n                                                    style={{ \"pointerEvents\": \"none\", \"position\": \"absolute\", \"marginTop\": \"5px\", \"marginLeft\": \"12px\" }}\r\n                                                    type='checkbox'\r\n                                                    id={wish._id}\r\n                                                    label={``}\r\n                                                />\r\n                                                <div className=\"d-flex flex-column\">\r\n                                                    <div className=\"border-section\">\r\n                                                        <Image className=\"imagenCentrar\" src={wish.img} style={{ \"maxHeight\": \"65%\" }} fluid />\r\n                                                    </div>\r\n                                                    <Card.Body className=\"d-flex justify-content-center\">\r\n                                                        <Card.Text className=\"cardName\"><Link className=\"linkProducto\" to={`/${normalizeText(wish.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(wish.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(wish.nombre.replace(/\\s+/g, \"-\"))}`}>{wish.nombre}</Link></Card.Text>\r\n                                                        <Card.Title className=\"cardPrice\"><b>{wish.precio} €</b></Card.Title>\r\n                                                    </Card.Body>\r\n                                                </div>\r\n                                            </Card >\r\n                                        </CSSTransition>\r\n                                    ))\r\n                                }\r\n                            </TransitionGroup>\r\n                        </Row>\r\n                    </Form>\r\n            }\r\n        </div>\r\n    )\r\n};","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Col, Image, Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { SummaryModal } from \"../../cart/summary/SummaryModal\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\n\r\nexport const Ratings = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [valorados, setValorados] = useState();\r\n    const [noValorados, setNovalorados] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n    const [modalShowValorados, setModalShowValorados] = useState(false);\r\n    const [modalShowNoValorados, setModalShowNoValorados] = useState(false);\r\n\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`productos/valoraciones/${uid}`);\r\n                const body = await resp.json();\r\n                if (body.msg) {\r\n                    return Swal.fire('Error', body.msg, 'error');\r\n                } else {\r\n                    setValorados(body.valorados);\r\n                    setNovalorados(body.noValorados);\r\n                    setChecking(true);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [modalShowValorados, modalShowNoValorados, uid]);\r\n\r\n    const handleDelete = (idProducto, idComentario) => {\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"¡No podrás revertir esto!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Eliminado',\r\n                    'El comentario ha sido eliminado',\r\n                    'success'\r\n                )\r\n                async function fetchData() {\r\n                    try {\r\n                        const resp = await fetchConToken(`productos/valoraciones/${uid}`, { idProducto, idComentario }, 'DELETE');\r\n                        const body = await resp.json();\r\n                        if (body.msg) {\r\n                            return Swal.fire('Error', body.msg, 'error');\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        return Swal.fire('Error', error, 'error');\r\n                    }\r\n                }\r\n                fetchData();\r\n                setModalShowNoValorados(!modalShowNoValorados);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3 className=\"mb-4\">Mis Valoraciones</h3>\r\n            <Tabs defaultActiveKey=\"sinvalorar\" id=\"uncontrolled-tab\" className=\"mb-5\">\r\n                <Tab eventKey=\"sinvalorar\" title={`Sin valorar (${noValorados.length})`}>\r\n                    {\r\n                        noValorados.length <= 0\r\n                            ? <div className=\"centrar\">\r\n                                <b>No hay productos disponibles para valorar</b>\r\n                                <div>De momento no tienes ningún producto por</div>\r\n                                <div>valorar, pero te animamos a ver nuestro</div>\r\n                                <div>catálogo de productos y valorar después de tu</div>\r\n                                <div>compra.</div>\r\n                                <Button className=\"mt-3\" variant=\"warning\" onClick={() => navigate(`/`)}>Ver el catálogo</Button>\r\n                            </div>\r\n                            : <TransitionGroup className=\"todo-list\">\r\n                                {\r\n                                    noValorados.map(op => (\r\n                                        <CSSTransition\r\n                                            key={op._id}\r\n                                            timeout={500}\r\n                                            classNames=\"item\"\r\n                                        >\r\n                                            <Row className=\"mt-4\">\r\n                                                <Col xs={1} sm={1} md={1}>\r\n                                                </Col>\r\n                                                <Col xs={3} sm={3} md={2} className=\"text-center\">\r\n                                                    <Image src={op.img ? op.img : \"/assets/no-image.png\"} style={{ \"maxHeight\": \"10rem\" }} fluid />\r\n                                                </Col>\r\n                                                <Col xs={8} sm={8} md={9} className=\"d-flex flex-column align-self-center\">\r\n                                                    <Link className=\"linkProducto mb-1\" style={{ \"fontSize\": \"20px\" }} to={`/${normalizeText(op.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(op.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(op.nombre.replace(/\\s+/g, \"-\"))}`}>{op.nombre}</Link>\r\n                                                    <span className=\"d-flex align-items-center\">\r\n                                                        <Rating\r\n                                                            className=\"me-2 mb-1\"\r\n                                                            style={{ \"pointerEvents\": \"none\" }}\r\n                                                            size={20}\r\n                                                            ratingValue={op.rating}\r\n                                                            allowHover={false}\r\n                                                        />\r\n                                                        {` ${op.opinion.length} Valoraciones`}\r\n                                                    </span>\r\n                                                    <div>\r\n                                                        <Button\r\n                                                            className=\"mt-3\"\r\n                                                            variant=\"outline-secondary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => setModalShowNoValorados(op._id)}\r\n                                                        >\r\n                                                            Escribir una opinión sobre el producto\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <hr className=\"mt-5\" />\r\n                                                <SummaryModal\r\n                                                    id={op._id}\r\n                                                    setModalShow={setModalShowNoValorados}\r\n                                                    show={modalShowNoValorados === op._id}\r\n                                                    onHide={() => setModalShowNoValorados(\"\")}\r\n                                                />\r\n                                            </Row>\r\n                                        </CSSTransition>\r\n                                    ))\r\n                                }\r\n                            </TransitionGroup>\r\n                    }\r\n                </Tab>\r\n                <Tab eventKey=\"valorados\" title={`Valorados (${valorados.length})`}>\r\n                    {\r\n                        valorados.length <= 0\r\n                            ? <div className=\"centrar\">\r\n                                <b>No hay productos valorados</b>\r\n                                <div>No has valorado ningún producto, pero</div>\r\n                                <div>puedes visitar cualquier producto y dejar tu</div>\r\n                                <div>valoración para ayudar al resto de usuarios.</div>\r\n                                <Button className=\"mt-3\" variant=\"warning\" onClick={() => navigate(`/`)}>Ver el catálogo</Button>\r\n                            </div>\r\n                            : <TransitionGroup className=\"todo-list\">\r\n                                {\r\n                                    valorados.map(op => (\r\n                                        <CSSTransition\r\n                                            key={op.opinion[0]._id}\r\n                                            timeout={500}\r\n                                            classNames=\"item\"\r\n                                        >\r\n                                            <Row className=\"mt-4 d-flex align-items-center\">\r\n                                                <Col xs={1} sm={1} md={1}>\r\n                                                </Col>\r\n                                                <Col xs={3} sm={3} md={2} className=\"text-center\">\r\n                                                    <Image src={op.img ? op.img : \"/assets/no-image.png\"} style={{ \"maxHeight\": \"10rem\" }} fluid />\r\n                                                </Col>\r\n                                                <Col xs={8} sm={8} md={3}>\r\n                                                    <div>\r\n                                                        <Link className=\"linkProducto mb-1\" style={{ \"fontSize\": \"20px\" }} to={`/${normalizeText(op.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(op.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(op.nombre.replace(/\\s+/g, \"-\"))}`}>{op.nombre}</Link>\r\n                                                    </div>\r\n                                                    <Button\r\n                                                        className=\"mt-2\"\r\n                                                        variant=\"outline-secondary\"\r\n                                                        size=\"sm\"\r\n                                                        onClick={() => setModalShowValorados(op._id)}\r\n                                                    >\r\n                                                        Editar opinión del producto\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className=\"mt-3\"\r\n                                                        variant=\"danger\"\r\n                                                        size=\"sm\"\r\n                                                        onClick={() => handleDelete(op._id, op.opinion[0]._id)}\r\n                                                    >\r\n                                                        Eliminar opinión\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={6} className=\"mt-3\">\r\n                                                    <div className=\"comentarios\">\r\n                                                        <Rating\r\n                                                            style={{ \"pointerEvents\": \"none\", \"marginRight\": \"8px\" }}\r\n                                                            size={20}\r\n                                                            ratingValue={op.opinion[0].rating}\r\n                                                            allowHover={false}\r\n                                                        />\r\n                                                        <div style={{ \"fontSize\": \"18px\" }}>{`${op.opinion[0].titulo}`}</div>\r\n                                                    </div>\r\n                                                    <div style={{ \"fontSize\": \"14px\" }}>{`${new Date(op.opinion[0].fecha).toLocaleDateString(\"es-ES\", options)}`}</div>\r\n                                                    <div className=\"mt-3\">{`${op.opinion[0].comentario}`}</div>\r\n                                                </Col>\r\n                                                <hr className=\"mt-5\" />\r\n                                                <SummaryModal\r\n                                                    id={op._id}\r\n                                                    setModalShow={setModalShowValorados}\r\n                                                    show={modalShowValorados === op._id}\r\n                                                    onHide={() => setModalShowValorados(\"\")}\r\n                                                    oldTitulo={op.opinion[0]?.titulo || null}\r\n                                                    oldComentario={op.opinion[0]?.comentario || null}\r\n                                                    oldRating={op.opinion[0]?.rating || null}\r\n                                                />\r\n                                            </Row>\r\n                                        </CSSTransition>\r\n                                    ))\r\n                                }\r\n                            </TransitionGroup>\r\n                    }\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { invoicePdf } from \"../../../helpers/invoicePdf\";\r\n\r\n\r\nexport const Orders = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { nombre, uid } = useSelector(state => state.auth);\r\n\r\n    const [pedidos, setPedidos] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`pedidos/${uid}`);\r\n                const body = await resp.json();\r\n                if (body.msg) {\r\n                    return Swal.fire('Error', body.msg, 'error');\r\n                } else {\r\n                    setPedidos(body.pedidos);\r\n                    setChecking(true);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [uid]);\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3>Mis Pedidos</h3>\r\n            {\r\n                pedidos.length === 0\r\n                    ? <div className=\"centrar mt-5\">\r\n                        <b>No ha realizado ningún pedido todavía,</b>\r\n                        <div>pero te animamos a ver nuestro catálogo</div>\r\n                        <Button className=\"mt-3\" variant=\"warning\" onClick={() => navigate(`/`)}>Ver el catálogo</Button>\r\n                    </div>\r\n                    :\r\n                    pedidos.map(pedido => (\r\n                        <Card key={pedido._id} className=\"mt-4\">\r\n                            <Card.Header>\r\n                                <Row className=\"ms-2\">\r\n                                    <Col md={3} className=\"mb-2\">\r\n                                        <Row>\r\n                                            Pedido realizado\r\n                                        </Row>\r\n                                        <Row>\r\n                                            {new Date(pedido.fecha).toLocaleDateString(\"es-ES\", options)}\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col md={3} className=\"mb-2\">\r\n                                        <Row>\r\n                                            Total\r\n                                        </Row>\r\n                                        <Row>\r\n                                            {pedido.total / 100}€\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className=\"mb-2\">\r\n                                        <Row className=\"me-1 disable-float\">\r\n                                            Pedido nº {pedido._id}\r\n                                        </Row>\r\n                                        <Row className=\"disable-float\">\r\n                                            <span>\r\n                                                <button className=\"botonLink\" onClick={() => navigate(\"/panel/pedidos/detalles\", {\r\n                                                    state: {\r\n                                                        pedido: pedido\r\n                                                    }\r\n                                                })}>Ver los detalles del pedido</button>\r\n                                                <div className=\"vr ms-2 me-2\"></div>\r\n                                                <button className=\"botonLink\" onClick={() => invoicePdf(nombre, pedido)}>Factura PDF</button>\r\n                                            </span>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {\r\n                                    pedido.producto.map(p => (\r\n                                        <Row className=\"align-items-center mb-3\" key={p.producto._id}>\r\n                                            <Col xs={2} md={1} className=\"text-center\">\r\n                                                <Image src={p.producto.img ? p.producto.img : \"/assets/no-image.png\"} style={{ \"maxHeight\": \"5rem\" }} fluid />\r\n                                            </Col>\r\n                                            <Col xs={10} md={11}>\r\n                                                <Link className=\"linkProducto\" style={{ \"fontSize\": \"18px\" }} to={`/${normalizeText(p.producto.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(p.producto.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(p.producto.nombre.replace(/\\s+/g, \"-\"))}`}>{p.producto.nombre}</Link>\r\n                                                <div style={{ \"fontSize\": \"14px\" }}>Cantidad: {p.unidades}</div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    ))\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n};","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { invoicePdf } from \"../../../helpers/invoicePdf\";\r\nimport { SummaryModal } from \"../../cart/summary/SummaryModal\";\r\n\r\n\r\nexport const OrdersDetail = () => {\r\n\r\n    const location = useLocation();\r\n    const { pedido } = location.state;\r\n\r\n    const { nombre } = useSelector(state => state.auth);\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    return (\r\n        <Container className=\"animate__animated animate__fadeIn mb-5\">\r\n            <Card className=\"mt-4\">\r\n                <Card.Header as=\"h4\">\r\n                    Detalles del pedido\r\n                    <div className=\"vr ms-3 me-3\"></div>\r\n                    <button className=\"botonLink\" onClick={() => invoicePdf(nombre, pedido)}>Imprimir Factura</button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xs={12} sm={4}>\r\n                            <Card.Title>Dirección de facturación</Card.Title>\r\n                            <Card.Text>\r\n                                {nombre}\r\n                                <br />\r\n                                {pedido.direccionFacturacion.line1} {pedido.direccionFacturacion.line2}\r\n                                <br />\r\n                                {pedido.direccionFacturacion.postal_code}\r\n                                <br />\r\n                                {pedido.direccionFacturacion.city} {pedido.direccionFacturacion.state}\r\n                                <br />\r\n                                {pedido.direccionFacturacion.country}\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col xs={12} sm={3} className=\"mt-4 mt-sm-0\">\r\n                            <Card.Title>Dirección de envío</Card.Title>\r\n                            <Card.Text>\r\n                                {pedido.direccionEnvio.name}\r\n                                <br />\r\n                                {pedido.direccionEnvio.address.line1} {pedido.direccionEnvio.address.line2}\r\n                                <br />\r\n                                {pedido.direccionEnvio.address.postal_code}\r\n                                <br />\r\n                                {pedido.direccionEnvio.address.city} {pedido.direccionEnvio.address.state}\r\n                                <br />\r\n                                {pedido.direccionEnvio.address.country}\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col xs={12} sm={3} className=\"mt-4 mt-sm-0\">\r\n                            <Card.Title>Método de pago</Card.Title>\r\n                            <Card.Text>\r\n                                <Image className=\"mg-fluid\" style={{ \"height\": \"25px\" }} src=\"https://images-na.ssl-images-amazon.com/images/G/30/checkout/payselect/card-logos-small/visa._CB658923706_.gif\" />\r\n                                <span> **** {pedido.digitos}</span>\r\n                            </Card.Text>\r\n                            <Card.Title>Fecha</Card.Title>\r\n                            <Card.Text>\r\n                                {new Date(pedido.fecha).toLocaleDateString(\"es-ES\", options)}\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col xs={12} sm={2} className=\"mt-4 mt-sm-0\">\r\n                            <Card.Title>Total:</Card.Title>\r\n                            <Card.Text>\r\n                                <b>EUR {pedido.total / 100}</b>\r\n                            </Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n            {\r\n                pedido.producto.map(prod => (\r\n                    <Card key={prod.producto._id} className=\"justify-content-center\">\r\n                        <Card.Body>\r\n                            <Row className=\"align-items-center\">\r\n                                <Col xs={3} sm={3} md={2} className=\"text-center\">\r\n                                    <Image src={prod.producto.img ? prod.producto.img : \"/assets/no-image.png\"} style={{ \"maxHeight\": \"8rem\" }} fluid />\r\n                                </Col>\r\n                                <Col xs={9} sm={9} md={5}>\r\n                                    <Link className=\"linkProducto\" style={{ \"fontSize\": \"18px\" }} to={`/${normalizeText(prod.producto.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.producto.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.producto.nombre.replace(/\\s+/g, \"-\"))}`}>{prod.producto.nombre}</Link>\r\n                                    <div style={{ \"fontWeight\": \"normal\", \"fontSize\": \"14px\" }}>Cantidad: {prod.unidades}</div>\r\n                                    <b>{prod.producto.precio * prod.unidades} €</b>\r\n                                </Col>\r\n                                <Col xs={12} sm={12} md={5} className=\"text-center mt-3\">\r\n                                    <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => setModalShow(prod.producto._id)}\r\n                                    >\r\n                                        Editar opinión sobre el producto\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <SummaryModal\r\n                                id={prod.producto._id}\r\n                                setModalShow={setModalShow}\r\n                                show={modalShow === prod.producto._id}\r\n                                onHide={() => setModalShow(\"\")}\r\n                                oldTitulo={prod.producto.opinion[0]?.titulo}\r\n                                oldComentario={prod.producto.opinion[0]?.comentario}\r\n                                oldRating={prod.producto.opinion[0]?.rating}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))\r\n            }\r\n        </Container>\r\n    )\r\n}","import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport const AdminPanel = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn mt-4\">\r\n            <h5>Administración</h5>\r\n            <div className=\"list-group\">\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/usuarios\")}>Usuarios</button>\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/categorias\")}>Categorías</button>\r\n                <button className=\"list-group-item list-group-item-action border-0 listaFondo\" onClick={() => navigate(\"/panel/productos\")}>Productos</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, FormGroup, FormLabel, FormText, Modal } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const UsersModal = ({ id, correo, nombre, usuarios, setUsuarios, setModalShow, ...props }) => {\r\n\r\n    const handleSubmit = async (values) => {\r\n\r\n        const enviar = await fetchConToken(`usuarios/${id}`, {\r\n            oldCorreo: correo,\r\n            correo: values.correo,\r\n            nombre: normalizeWhiteSpaces(values.nombre),\r\n        }, 'PUT');\r\n        const bodyEnviar = await enviar.json();\r\n\r\n        if (bodyEnviar.msg) { // Si hay errores\r\n            Swal.fire('Error', bodyEnviar.msg, 'error');\r\n        } else {\r\n            const newUsuarios = [...usuarios];\r\n            newUsuarios[usuarios.findIndex(user => user._id === id)] = bodyEnviar;\r\n            setUsuarios(newUsuarios);\r\n            setModalShow(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                correo: correo,\r\n                nombre: nombre,\r\n            }}\r\n            validationSchema={Yup.object({\r\n                correo: Yup.string()\r\n                    .email('El email es inválido')\r\n                    .required('Requerido'),\r\n                nombre: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(20, '20 caracteres como máximo')\r\n                    .required('Requerido'),\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Editar usuario\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <MyTextInput\r\n                            label=\"Correo\"\r\n                            name=\"correo\"\r\n                        />\r\n                        <MyTextInput\r\n                            label=\"Nombre\"\r\n                            name=\"nombre\"\r\n                        />\r\n                        <div className=\"d-grid\">\r\n                            <Button className=\"mt-4\" type=\"submit\" variant=\"primary\" size=\"lg\">Actualizar</Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { UsersModal } from \"./UsersModal\";\r\n\r\n\r\nexport const Users = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`usuarios`);\r\n                const body = await resp.json();\r\n                setUsuarios(body.usuarios);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleDelete = async (id, estado, desactivar) => {\r\n        if (desactivar) {\r\n            try {\r\n                if (estado) {\r\n                    const resp = await fetchConToken(`usuarios/${id}`, {}, 'DELETE');\r\n                    const body = await resp.json();\r\n                    const newUsuarios = [...usuarios];\r\n                    newUsuarios[usuarios.findIndex(user => user._id === body.usuario._id)].estado = false;\r\n                    setUsuarios(newUsuarios);\r\n                    Swal.fire('Usuario deshabilitado', \"\", 'success');\r\n                } else {\r\n                    const resp = await fetchConToken(`usuarios/${id}`, { estado: true }, 'PUT');\r\n                    const body = await resp.json();\r\n                    const newUsuarios = [...usuarios];\r\n                    newUsuarios[usuarios.findIndex(user => user._id === body._id)].estado = true;\r\n                    setUsuarios(newUsuarios);\r\n                    Swal.fire('Usuario habilitado', \"\", 'success');\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        } else {\r\n            Swal.fire('Usuario bloqueado', \"El webmaster ha bloqueado este usuario\", 'info');\r\n        }\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3>Gestión de Usuarios</h3>\r\n            <Card className=\"mt-4\">\r\n                <Card.Header>\r\n                    <Row>\r\n                        <Col xs={6} sm={5} md={3}>\r\n                            Correo\r\n                        </Col>\r\n                        <Col xs={0} sm={3} md={3} className=\"disable-card-header2\">\r\n                            Nombre\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={3} className=\"disable-card-header\">\r\n                            Estado\r\n                        </Col>\r\n                        <Col xs={6} sm={4} md={3}>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    {\r\n                        usuarios.map(user =>\r\n                            <ListGroup.Item key={user._id}>\r\n                                <Row>\r\n                                    <Col xs={6} sm={5} md={3}>\r\n                                        {user.correo}\r\n                                    </Col>\r\n                                    <Col xs={0} sm={3} md={3} className=\"disable-card-header2\">\r\n                                        {user.nombre}\r\n                                    </Col>\r\n                                    <Col xs={0} sm={0} md={3} className=\"disable-card-header\">\r\n                                        {\r\n                                            user.estado ? <span className=\"text-success\">Activo</span> : <span className=\"text-danger\">Deshabilitado</span>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={6} sm={4} md={3}>\r\n                                        <div className=\"d-flex\">\r\n                                            <Button\r\n                                                className=\"me-1 flex-grow-1\"\r\n                                                variant=\"outline-primary\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => setModalShow(user._id)}\r\n                                            >\r\n                                                Editar\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"flex-grow-1\"\r\n                                                variant={user.estado ? \"outline-danger\" : \"outline-success\"}\r\n                                                size=\"sm\"\r\n                                                onClick={() => handleDelete(user._id, user.estado, user.desactivar)}\r\n                                            >\r\n                                                {\r\n                                                    user.estado ? \"Eliminar\" : \"Habilitar\"\r\n                                                }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <UsersModal\r\n                                    id={user._id}\r\n                                    correo={user.correo}\r\n                                    nombre={user.nombre}\r\n                                    usuarios={usuarios}\r\n                                    setUsuarios={setUsuarios}\r\n                                    setModalShow={setModalShow}\r\n                                    show={modalShow === user._id}\r\n                                    onHide={() => setModalShow(\"\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, FormGroup, FormLabel, FormText, Modal } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const CategoryAddModal = ({ categorias, setCategorias, setModalShow, ...props }) => {\r\n\r\n    const [fileUpload, setFileUpload] = useState();\r\n\r\n    const handleSubmit = async (values, resetForm) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`categorias`, {\r\n                nombre: normalizeWhiteSpaces(values.nombre)\r\n            }, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                const newCat = [...categorias];\r\n                newCat.push(body);\r\n                setCategorias(newCat);\r\n                handleUploadImage(body._id, newCat);\r\n                resetForm();\r\n                setModalShow(\"\");\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            Swal.fire('Error', error.message, 'error');\r\n        }\r\n\r\n    }\r\n\r\n    const handleUploadImage = (id, newCat) => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, id, \"categorias\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        const newCatImg = [...newCat];\r\n                        newCatImg[newCatImg.findIndex(cat => cat._id === data._id)] = data;\r\n                        setCategorias(newCatImg);\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error.message, 'error'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                nombre: \"\",\r\n            }}\r\n            validationSchema={Yup.object({\r\n                nombre: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(23, '23 caracteres como máximo')\r\n                    .required('El nombre es obligatorio'),\r\n            })}\r\n            onSubmit={(values, { resetForm }) => handleSubmit(values, resetForm)}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crear Categoría\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <MyTextInput\r\n                            label=\"Nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Nombre*\"\r\n                        />\r\n                        <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-4\">\r\n                            <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                            <FormControl\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={(event) => setFileUpload(event)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div className=\"d-grid mt-4\">\r\n                            <Button type=\"submit\">\r\n                                Crear\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { CategoryAddModal } from \"./CategoryAddModal\";\r\n\r\n\r\nexport const Categories = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [categorias, setCategorias] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`categorias?visibles=${`{\"estado\": {\"$in\" : [\"true\", \"false\"]}}`}&ordenar=\"\"`);\r\n                const body = await resp.json();\r\n                setCategorias(body.categorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3>Gestión de Categorías</h3>\r\n            <Card className=\"mt-4\">\r\n                <Card.Header>\r\n                    <Row>\r\n                        <Col xs={5} sm={4} md={4}>\r\n                            Nombre\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={2} className=\"disable-card-header\">\r\n                            Ventas\r\n                        </Col>\r\n                        <Col xs={3} sm={4} md={2}>\r\n                            Estado\r\n                        </Col>\r\n                        <Col xs={4} sm={4} md={4}>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    {\r\n                        categorias.map(cat =>\r\n                            <ListGroup.Item key={cat._id}>\r\n                                <Row>\r\n                                    <Col xs={5} sm={4} md={4}>\r\n                                        <Link\r\n                                            className=\"linkProducto\"\r\n                                            to={`/${normalizeText(cat.nombre.replace(/\\s+/g, \"-\"))}`}>\r\n                                            {cat.nombre}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col xs={0} sm={0} md={2} className=\"disable-card-header\">\r\n                                        {cat.vendidos}\r\n                                    </Col>\r\n                                    <Col xs={3} sm={4} md={2}>\r\n                                        {\r\n                                            cat.estado ? <span className=\"text-success\">Activa</span> : <span className=\"text-danger\">Deshabilitada</span>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={4} sm={4} md={4} className=\"mt-2 mt-sm-0\">\r\n                                        <div className=\"d-grid\">\r\n                                            <Button\r\n                                                className=\"me-1\"\r\n                                                variant=\"outline-primary\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => navigate(`/panel/categorias/${normalizeText(cat.nombre.replace(/\\s+/g, '-'))}`)}\r\n                                            >\r\n                                                Editar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n            <Button className=\"mt-4\" onClick={() => setModalShow(\"open\")}>\r\n                Agregar Categoría\r\n            </Button>\r\n            <CategoryAddModal\r\n                categorias={categorias}\r\n                setCategorias={setCategorias}\r\n                setModalShow={setModalShow}\r\n                setChecking={setChecking}\r\n                show={modalShow === \"open\"}\r\n                onHide={() => setModalShow(\"\")}\r\n            />\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Image, Modal, Row } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const SubUpdateModal = ({ subcategoria, subcategorias, setSubCategorias, setModalShow, ...props }) => {\r\n\r\n    const [fileUpload, setFileUpload] = useState();\r\n\r\n    const handleSubmit = async (values) => {\r\n\r\n        if (subcategoria.nombre !== values.nombre) {\r\n            const enviar = await fetchConToken(`categorias/subcategoria/${subcategoria._id}`, {\r\n                oldNombre: subcategoria.nombre,\r\n                nombre: normalizeWhiteSpaces(values.nombre),\r\n            }, 'PUT');\r\n            const bodyEnviar = await enviar.json();\r\n\r\n            if (bodyEnviar.msg) { // Si hay errores\r\n                Swal.fire('Error', bodyEnviar.msg, 'error');\r\n            } else {\r\n                const newSub = [...subcategorias];\r\n                newSub[newSub.findIndex(sub => sub._id === bodyEnviar._id)].nombre = bodyEnviar.nombre;\r\n                setSubCategorias(newSub);\r\n            }\r\n        }\r\n\r\n        handleUploadImage();\r\n\r\n        setModalShow(\"\");\r\n\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    const handleUploadImage = () => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, subcategoria._id, \"subcategorias\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        const newSub = [...subcategorias];\r\n                        newSub[newSub.findIndex(sub => sub._id === data._id)].img = data.img;\r\n                        setSubCategorias(newSub);\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error, 'error'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                nombre: subcategoria.nombre,\r\n            }}\r\n            validationSchema={Yup.object({\r\n                nombre: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(23, '23 caracteres como máximo')\r\n                    .required('El nombre es obligatorio'),\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Editar Subcategoría\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} lg={8}>\r\n                                <MyTextInput\r\n                                    label=\"Nombre\"\r\n                                    name=\"nombre\"\r\n                                />\r\n                                <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-4\">\r\n                                    <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                                    <FormControl\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={(event) => setFileUpload(event)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col xs={12} lg={4} className='centrarImagen'>\r\n                                <div className='text-center'>\r\n                                    <Image src={subcategoria.img ? subcategoria.img : \"/assets/no-image.png\"} fluid />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"d-grid mt-4\">\r\n                            <Button type=\"submit\">\r\n                                Actualizar\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, FormGroup, FormLabel, FormText, Modal } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const SubAddModal = ({ categoria, setCategoria, subcategorias, setSubCategorias, setModalShowAdd, ...props }) => {\r\n\r\n    const [fileUpload, setFileUpload] = useState();\r\n\r\n    const handleSubmit = async (values, resetForm) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`categorias/subcategoria`, {\r\n                idCategoria: categoria._id,\r\n                nombre: normalizeWhiteSpaces(values.nombre)\r\n            }, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                setSubCategorias(body.categoria.subcategorias);\r\n                setCategoria(body.categoria);\r\n                handleUploadImage(body.subcategoria._id, body.categoria, body.categoria.subcategorias);\r\n                resetForm();\r\n                setModalShowAdd(\"\");\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            Swal.fire('Error', error.message, 'error');\r\n        }\r\n\r\n    }\r\n\r\n    const handleUploadImage = (id, bodyCat, bodySub) => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, id, \"subcategorias\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        const newSub = [...bodySub];\r\n                        newSub[newSub.findIndex(sub => sub._id === data._id)] = data;\r\n                        setSubCategorias(newSub);\r\n                        const newCat = bodyCat;\r\n                        newCat.subcategorias = newSub;\r\n                        setCategoria(newCat);\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error.message, 'error'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                nombre: \"\",\r\n            }}\r\n            validationSchema={Yup.object({\r\n                nombre: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(23, '23 caracteres como máximo')\r\n                    .required('El nombre es obligatorio'),\r\n            })}\r\n            onSubmit={(values, { resetForm }) => handleSubmit(values, resetForm)}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crear Subcategoría\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <MyTextInput\r\n                            label=\"Nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Nombre*\"\r\n                        />\r\n                        <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-4\">\r\n                            <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                            <FormControl\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={(event) => setFileUpload(event)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div className=\"d-grid mt-4\">\r\n                            <Button type=\"submit\">\r\n                                Crear\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Image, ListGroup, Row } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeText, normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\nimport { SubUpdateModal } from './SubUpdateModal';\r\nimport { SubAddModal } from './SubAddModal';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const CategoryDetail = () => {\r\n\r\n    const { CategoriaNombre } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [categoria, setCategoria] = useState();\r\n    const [subcategorias, setSubCategorias] = useState();\r\n    const [fileUpload, setFileUpload] = useState();\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalShowAdd, setModalShowAdd] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`categorias/${CategoriaNombre.replace(/-/g, \" \")}`);\r\n                const body = await resp.json();\r\n                setCategoria(body.categoria);\r\n                setSubCategorias(body.categoria.subcategorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [CategoriaNombre]);\r\n\r\n    const handleDelete = async () => {\r\n        if (categoria.desactivar) {\r\n            try {\r\n                if (categoria.estado) {\r\n                    const resp = await fetchConToken(`categorias/${categoria._id}`, {}, 'DELETE');\r\n                    const body = await resp.json();\r\n                    setCategoria(body);\r\n                    window.location.reload();\r\n                } else {\r\n                    const resp = await fetchConToken(`categorias/${categoria._id}`, { estado: true }, 'PUT');\r\n                    const body = await resp.json();\r\n                    setCategoria(body);\r\n                    window.location.reload();\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        } else {\r\n            Swal.fire('Categoría bloqueada', \"El webmaster ha bloqueado esta categoría\", 'info');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (values) => {\r\n        if (categoria.nombre !== values.nombre) {\r\n            const enviar = await fetchConToken(`categorias/${categoria._id}`, {\r\n                oldNombre: categoria.nombre,\r\n                nombre: normalizeWhiteSpaces(values.nombre),\r\n            }, 'PUT');\r\n            const body = await enviar.json();\r\n\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                setCategoria(body);\r\n                Swal.fire('Nombre actualizado', \"\", 'success');\r\n                navigate(`/panel/categorias/${normalizeText(body.nombre.replace(/\\s+/g, '-'))}`, { replace: true });\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUploadImage = () => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, categoria._id, \"categorias\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        setCategoria(data);\r\n                        Swal.fire('Imagen actualizada', \"\", 'success');\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error, 'error'));\r\n        }\r\n    }\r\n\r\n    const handleSubDelete = async (id, estado, desactivar) => {\r\n        if (desactivar) {\r\n            try {\r\n                if (estado) {\r\n                    const resp = await fetchConToken(`categorias/subcategoria/${id}`, {}, 'DELETE');\r\n                    const body = await resp.json();\r\n                    const newSub = [...subcategorias];\r\n                    newSub[newSub.findIndex(sub => sub._id === body._id)].estado = false;\r\n                    setSubCategorias(newSub);\r\n                    window.location.reload();\r\n                } else {\r\n                    const resp = await fetchConToken(`categorias/subcategoria/${id}`, { estado: true }, 'PUT');\r\n                    const body = await resp.json();\r\n                    const newSub = [...subcategorias];\r\n                    newSub[newSub.findIndex(sub => sub._id === body._id)].estado = true;\r\n                    setSubCategorias(newSub);\r\n                    window.location.reload();\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error, 'error');\r\n            }\r\n        } else {\r\n            Swal.fire('Subcategoría bloqueada', \"El webmaster ha bloqueado esta subcategoría\", 'info');\r\n        }\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: categoria.nombre,\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    nombre: Yup.string()\r\n                        .min(2, '2 caracteres como mínimo')\r\n                        .max(23, '23 caracteres como máximo')\r\n                        .required('El nombre es obligatorio'),\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Form>\r\n                    <h3 className=\"mb-3\">Editar Categoría</h3>\r\n                    <Row>\r\n                        <Col xs={12} lg={8}>\r\n                            <Row>\r\n                                <Col xs={8} className='mt-auto'>\r\n                                    <MyTextInput\r\n                                        label=\"Nombre\"\r\n                                        name=\"nombre\"\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4} className='mt-auto'>\r\n                                    <Button type=\"submit\">\r\n                                        Actualizar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='mb-4 mb-lg-0'>\r\n                                <Col xs={8} className='mt-auto'>\r\n                                    <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-4\">\r\n                                        <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                                        <FormControl\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={(event) => setFileUpload(event)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={4} className='mt-auto'>\r\n                                    <Button onClick={() => handleUploadImage()}>\r\n                                        Actualizar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={12} lg={4} className=\"d-flex justify-content-center align-items-center\">\r\n                            <div style={{ \"height\": \"14rem\" }}>\r\n                                <Image className=\"mh-100\" src={categoria.img ? categoria.img : \"/assets/no-image.png\"} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <h5 className='mt-4'>Subcategorías</h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        {\r\n                            categoria.subcategorias.length !== 0\r\n                                ? categoria.subcategorias.map(sub =>\r\n                                    <ListGroup.Item key={sub._id}>\r\n                                        <Row>\r\n                                            <Col xs={5} sm={5} md={4}>\r\n                                                <Link\r\n                                                    className=\"linkProducto\"\r\n                                                    to={`/${normalizeText(categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(sub.nombre.replace(/\\s+/g, \"-\"))}`}>\r\n                                                    {sub.nombre}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col xs={0} sm={0} md={3} className=\"disable-card-header\">\r\n                                                {\r\n                                                    sub.estado ? <span className=\"text-success\">Activa</span> : <span className=\"text-danger\">Deshabilitada</span>\r\n                                                }\r\n                                            </Col>\r\n                                            <Col xs={7} sm={7} md={5}>\r\n                                                <div className=\"d-flex\">\r\n                                                    <Button\r\n                                                        className=\"me-1 flex-grow-1\"\r\n                                                        variant=\"outline-primary\"\r\n                                                        size=\"sm\"\r\n                                                        onClick={() => setModalShow(sub._id)}\r\n                                                    >\r\n                                                        Editar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className=\"flex-grow-1\"\r\n                                                        variant={sub.estado ? \"outline-danger\" : \"outline-success\"}\r\n                                                        size=\"sm\"\r\n                                                        onClick={() => handleSubDelete(sub._id, sub.estado, sub.desactivar)}\r\n                                                    >\r\n                                                        {\r\n                                                            sub.estado ? \"Eliminar\" : \"Habilitar\"\r\n                                                        }\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <SubUpdateModal\r\n                                            subcategoria={sub}\r\n                                            subcategorias={subcategorias}\r\n                                            setSubCategorias={setSubCategorias}\r\n                                            setModalShow={setModalShow}\r\n                                            show={modalShow === sub._id}\r\n                                            onHide={() => setModalShow(\"\")}\r\n                                        />\r\n                                    </ListGroup.Item>\r\n                                )\r\n                                : <ListGroup.Item key={categoria._id}>\r\n                                    No tiene subcategorías\r\n                                </ListGroup.Item>\r\n                        }\r\n                    </ListGroup>\r\n                    <Button className=\"mt-2 mb-2\" onClick={() => setModalShowAdd(\"openSub\")}>\r\n                        Agregar Subcategoría\r\n                    </Button>\r\n                    <h5 className=\"mt-4 mb-2\">Estado: {\r\n                        categoria.estado ? <span className=\"text-success\">Activa</span> : <span className=\"text-danger\">Deshabilitada</span>\r\n                    }</h5>\r\n                    <Button\r\n                        variant={categoria.estado ? \"danger\" : \"success\"}\r\n                        onClick={() => handleDelete()}\r\n                    >\r\n                        {\r\n                            categoria.estado ? \"Eliminar\" : \"Activar\"\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n            <SubAddModal\r\n                categoria={categoria}\r\n                setCategoria={setCategoria}\r\n                subcategorias={subcategorias}\r\n                setSubCategorias={setSubCategorias}\r\n                setModalShowAdd={setModalShowAdd}\r\n                show={modalShowAdd === \"openSub\"}\r\n                onHide={() => setModalShowAdd(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormSelect, FormText, Modal, Row } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const ProductAddModal = ({ categorias, setModalShow, ...props }) => {\r\n\r\n    const [fileUpload, setFileUpload] = useState();\r\n    const [cat, setCat] = useState();\r\n    const [sub, setSub] = useState();\r\n\r\n    const handleSubmit = async (values, resetForm) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`productos`, {\r\n                nombre: normalizeWhiteSpaces(values.nombre.replace(/-/g, \" \")),\r\n                descripcion: values.descripcion,\r\n                precio: values.precio,\r\n                stock: values.stock,\r\n                categoria: cat._id,\r\n                subcategoria: sub\r\n            }, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                handleUploadImage(body._id);\r\n                setModalShow(\"\");\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            Swal.fire('Error', error.message, 'error');\r\n        }\r\n\r\n    }\r\n\r\n    const handleUploadImage = (id) => {\r\n\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, id, \"productos\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error.message, 'error'));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                nombre: \"\",\r\n                descripcion: \"\",\r\n                precio: \"\",\r\n                stock: \"\"\r\n            }}\r\n            validationSchema={Yup.object({\r\n                nombre: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(34, '34 caracteres como máximo')\r\n                    .required('El nombre es obligatorio'),\r\n                descripcion: Yup.string()\r\n                    .min(2, '2 caracteres como mínimo')\r\n                    .max(2000, '2000 caracteres como máximo')\r\n                    .required('La descripción es obligatoria'),\r\n                precio: Yup.number()\r\n                    .typeError('Debe especificar un número')\r\n                    .required('Requerido'),\r\n                stock: Yup.number()\r\n                    .typeError('Debe especificar un número')\r\n                    .required('Requerido'),\r\n            })}\r\n            onSubmit={(values, { resetForm }) => handleSubmit(values, resetForm)}\r\n        >\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crear Producto\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <MyTextInput\r\n                            label=\"Nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Nombre*\"\r\n                        />\r\n                        <Row className='mt-2 mb-4'>\r\n                            <Col>\r\n                                <h5 className='mt-3'>Categoría</h5>\r\n                                <FormSelect\r\n                                    defaultValue=\"default\"\r\n                                    aria-label=\"Default select example\"\r\n                                    onChange={e => {\r\n                                        setCat(JSON.parse(e.target.value))\r\n                                    }}\r\n                                >\r\n                                    <option value=\"default\" disabled hidden>Selecciona la categoría</option>\r\n                                    {\r\n                                        categorias.map(cat =>\r\n                                            <option key={cat._id} value={JSON.stringify(cat)}>{cat.nombre}</option>\r\n                                        )\r\n                                    }\r\n                                </FormSelect>\r\n                            </Col>\r\n                            <Col>\r\n                                <h5 className='mt-3'>Subcategoría</h5>\r\n                                <FormSelect\r\n                                    disabled={cat ? false : true}\r\n                                    defaultValue=\"default\"\r\n                                    aria-label=\"Default select example\"\r\n                                    onChange={e => {\r\n                                        setSub(e.target.value)\r\n                                    }}\r\n                                >\r\n                                    <option value=\"default\" disabled hidden>Selecciona la subcategoría</option>\r\n                                    {\r\n                                        cat\r\n                                            ? cat.subcategorias.map(sub =>\r\n                                                <option key={sub._id} value={sub._id}>{sub.nombre}</option>\r\n                                            )\r\n                                            : null\r\n                                    }\r\n                                </FormSelect>\r\n                            </Col>\r\n                        </Row>\r\n                        <MyTextInput\r\n                            label=\"Descripción\"\r\n                            name=\"descripcion\"\r\n                            type=\"textarea\"\r\n                            rows=\"6\"\r\n                            placeholder=\"Descripción*\"\r\n                        />\r\n                        <Row className='mt-2'>\r\n                            <Col>\r\n                                <MyTextInput\r\n                                    label=\"Precio\"\r\n                                    name=\"precio\"\r\n                                    placeholder=\"Precio*\"\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <MyTextInput\r\n                                    label=\"Stock\"\r\n                                    name=\"stock\"\r\n                                    placeholder=\"Stock*\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-3\">\r\n                            <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                            <FormControl\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={(event) => setFileUpload(event)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div className=\"d-grid mt-4\">\r\n                            <Button type=\"submit\">\r\n                                Crear\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Cerrar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Formik>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { normalizeText } from 'normalize-text';\r\n\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\nimport { ProductAddModal } from \"./ProductAddModal\";\r\n\r\n\r\nexport const Products = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [categorias, setCategorias] = useState(false);\r\n    const [productos, setProductos] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`productos?visibles=${`{\"estado\": {\"$in\" : [\"true\", \"false\"]}}`}&ordenar=\"\"`);\r\n                const body = await resp.json();\r\n                setProductos(body.productos);\r\n                const resp2 = await fetchConToken(`categorias?visibles=${`{\"estado\": {\"$in\" : [\"true\", \"false\"]}}`}&ordenar=\"\"`);\r\n                const body2 = await resp2.json();\r\n                setCategorias(body2.categorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <h3>Gestión de Productos</h3>\r\n            <Card className=\"mt-4\">\r\n                <Card.Header>\r\n                    <Row>\r\n                        <Col xs={5} sm={4} md={4}>\r\n                            Nombre\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={2} className=\"disable-card-header\">\r\n                            Ventas\r\n                        </Col>\r\n                        <Col xs={3} sm={4} md={2}>\r\n                            Estado\r\n                        </Col>\r\n                        <Col xs={4} sm={4} md={4}>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    {\r\n                        productos.map(prod =>\r\n                            <ListGroup.Item key={prod._id}>\r\n                                <Row>\r\n                                    <Col xs={5} sm={4} md={4}>\r\n                                        <Link\r\n                                            className=\"linkProducto\"\r\n                                            to={`/${normalizeText(prod.categoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.subcategoria.nombre.replace(/\\s+/g, \"-\"))}/${normalizeText(prod.nombre.replace(/\\s+/g, \"-\"))}`}>\r\n                                            {prod.nombre}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col xs={0} sm={0} md={2} className=\"disable-card-header\">\r\n                                        {prod.vendido}\r\n                                    </Col>\r\n                                    <Col xs={3} sm={4} md={2}>\r\n                                        {\r\n                                            prod.estado ? <span className=\"text-success\">Activo</span> : <span className=\"text-danger\">Deshabilitado</span>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={4} sm={4} md={4} className=\"mt-2 mt-sm-0\">\r\n                                        <div className=\"d-grid\">\r\n                                            <Button\r\n                                                className=\"me-1\"\r\n                                                variant=\"outline-primary\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => navigate(`/panel/productos/${normalizeText(prod.nombre.replace(/\\s+/g, '-'))}`)}\r\n                                            >\r\n                                                Editar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n            <Button className=\"mt-4\" onClick={() => setModalShow(\"open\")}>\r\n                Agregar Producto\r\n            </Button>\r\n            <ProductAddModal\r\n                categorias={categorias}\r\n                setModalShow={setModalShow}\r\n                show={modalShow === \"open\"}\r\n                onHide={() => setModalShow(\"\")}\r\n            />\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormSelect, FormText, Image, Row } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { normalizeText, normalizeWhiteSpaces } from 'normalize-text';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { imageUpload } from '../../../helpers/imageUpload';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel as=\"h5\" htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const ProductDetail = () => {\r\n\r\n    const { ProductoNombre } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [producto, setProducto] = useState();\r\n    const [categorias, setCategorias] = useState(false);\r\n    const [cat, setCat] = useState();\r\n    const [sub, setSub] = useState();\r\n    const [fileUpload, setFileUpload] = useState();\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const resp = await fetchConToken(`productos/producto/${ProductoNombre.replace(/-/g, \" \")}`);\r\n                const body = await resp.json();\r\n                setProducto(body.producto);\r\n                setCat(body.producto.categoria);\r\n                setSub(body.producto.subcategoria._id);\r\n                const resp2 = await fetchConToken(`categorias?visibles=${`{\"estado\": {\"$in\" : [\"true\", \"false\"]}}`}&ordenar=\"\"`);\r\n                const body2 = await resp2.json();\r\n                setCategorias(body2.categorias);\r\n                setChecking(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [ProductoNombre]);\r\n\r\n    const handleDelete = async () => {\r\n        if (producto.desactivar) {\r\n            try {\r\n                if (producto.estado) {\r\n                    await fetchConToken(`productos/${producto._id}`, {}, 'DELETE');\r\n                    setProducto(oldState => ({ ...oldState, estado: false }));\r\n                    Swal.fire('Producto deshabilitado', \"\", 'success');\r\n                } else {\r\n                    await fetchConToken(`productos/${producto._id}`, { estado: true }, 'PUT');\r\n                    setProducto(oldState => ({ ...oldState, estado: true }));\r\n                    Swal.fire('Producto habilitado', \"\", 'success');\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                return Swal.fire('Error', error.message, 'error');\r\n            }\r\n        } else {\r\n            Swal.fire('Producto bloqueado', \"El webmaster ha bloqueado este producto\", 'info');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (values) => {\r\n        if (cat.subcategorias.find(subCat => subCat._id === sub)) {\r\n            const enviar = await fetchConToken(`productos/${producto._id}`, {\r\n                nombre: normalizeWhiteSpaces(values.nombre.replace(/-/g, \" \")),\r\n                descripcion: values.descripcion,\r\n                precio: values.precio,\r\n                stock: values.stock,\r\n                categoria: cat._id,\r\n                subcategoria: sub,\r\n                oldSubcategoria: producto.subcategoria\r\n            }, 'PUT');\r\n            const body = await enviar.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                if (fileUpload) {\r\n                    handleUploadImage();\r\n                } else {\r\n                    setProducto(body);\r\n                }\r\n                Swal.fire('Producto actualizado', \"\", 'success');\r\n                navigate(`/panel/productos/${normalizeText(body.nombre.replace(/\\s+/g, '-'))}`, { replace: true });\r\n            }\r\n        } else {\r\n            Swal.fire('Subcategoría incorrecta', \"Seleccione otra subcategoría\", 'error');\r\n        }\r\n    }\r\n\r\n    const handleUploadImage = () => {\r\n        if (fileUpload) {\r\n            imageUpload(fileUpload, producto._id, \"productos\")\r\n                .then((data) => {\r\n                    if (data.msg) {\r\n                        Swal.fire('Error', data.msg, 'error')\r\n                    } else {\r\n                        setProducto(data);\r\n                    }\r\n                })\r\n                .catch(error => Swal.fire('Error', error, 'error'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        checking && <div className=\"animate__animated animate__fadeIn mt-4 mb-5\">\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: producto.nombre,\r\n                    descripcion: producto.descripcion,\r\n                    precio: producto.precio,\r\n                    stock: producto.stock,\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    nombre: Yup.string()\r\n                        .min(2, '2 caracteres como mínimo')\r\n                        .max(34, '34 caracteres como máximo')\r\n                        .required('El nombre es obligatorio'),\r\n                    descripcion: Yup.string()\r\n                        .min(2, '2 caracteres como mínimo')\r\n                        .max(2000, '2000 caracteres como máximo')\r\n                        .required('La descripción es obligatoria'),\r\n                    precio: Yup.number()\r\n                        .typeError('Debe especificar un número')\r\n                        .required('Requerido'),\r\n                    stock: Yup.number()\r\n                        .typeError('Debe especificar un número')\r\n                        .required('Requerido'),\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Form>\r\n                    <h3 className=\"mb-3\">Editar Producto</h3>\r\n                    <Row>\r\n                        <Col xs={12} lg={8}>\r\n                            <Row>\r\n                                <MyTextInput\r\n                                    label=\"Nombre\"\r\n                                    name=\"nombre\"\r\n                                />\r\n                            </Row>\r\n                            <Row className='mb-4 mb-lg-0'>\r\n                                <FormGroup id=\"fileUpload\" controlId=\"formFile\" className=\"mt-4\">\r\n                                    <FormLabel style={{ \"marginBottom\": \"-1px\" }}><h5>Imagen</h5></FormLabel>\r\n                                    <FormControl\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={(event) => setFileUpload(event)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={12} lg={4} className=\"d-flex justify-content-center align-items-center\">\r\n                            <div style={{ \"height\": \"14rem\" }}>\r\n                                <Image className=\"mh-100\" src={producto.img ? producto.img : \"/assets/no-image.png\"} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-2 mb-4'>\r\n                        <Col>\r\n                            <h5 className='mt-3'>Categoría</h5>\r\n                            <FormSelect\r\n                                defaultValue={producto.categoria._id}\r\n                                aria-label=\"Default select example\"\r\n                                onChange={e => {\r\n                                    setCat(JSON.parse(e.target.value))\r\n                                }}\r\n                            >\r\n                                <option value={producto.categoria._id} disabled hidden>{producto.categoria.nombre}</option>\r\n                                {\r\n                                    categorias.map(cat =>\r\n                                        <option key={cat._id} value={JSON.stringify(cat)}>{cat.nombre}</option>\r\n                                    )\r\n                                }\r\n                            </FormSelect>\r\n                        </Col>\r\n                        <Col>\r\n                            <h5 className='mt-3'>Subcategoría</h5>\r\n                            <FormSelect\r\n                                defaultValue={producto.subcategoria._id}\r\n                                aria-label=\"Default select example\"\r\n                                onChange={e => {\r\n                                    setSub(e.target.value)\r\n                                }}\r\n                            >\r\n                                <option value={producto.subcategoria._id} disabled hidden>{producto.subcategoria.nombre}</option>\r\n                                {\r\n                                    cat\r\n                                        ? cat.subcategorias.map(sub =>\r\n                                            <option key={sub._id} value={sub._id}>{sub.nombre}</option>\r\n                                        )\r\n                                        : null\r\n                                }\r\n                            </FormSelect>\r\n                        </Col>\r\n                    </Row>\r\n                    <MyTextInput\r\n                        label=\"Descripción\"\r\n                        name=\"descripcion\"\r\n                        type=\"textarea\"\r\n                        rows=\"6\"\r\n                    />\r\n                    <Row className='mt-3'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Precio\"\r\n                                name=\"precio\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Stock\"\r\n                                name=\"stock\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"d-grid mt-4\">\r\n                        <Button type=\"submit\">\r\n                            Actualizar\r\n                        </Button>\r\n                    </div>\r\n                    <h5 className=\"mt-4 mb-2\">Estado: {\r\n                        producto.estado ? <span className=\"text-success\">Activo</span> : <span className=\"text-danger\">Deshabilitado</span>\r\n                    }</h5>\r\n                    <Button\r\n                        variant={producto.estado ? \"danger\" : \"success\"}\r\n                        onClick={() => handleDelete()}\r\n                    >\r\n                        {\r\n                            producto.estado ? \"Eliminar\" : \"Activar\"\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Navigate, Route, Routes, useLocation } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { TopBar } from \"../components/ui/TopBar\";\r\nimport { Footer } from \"../components/ui/Footer\";\r\nimport { MenuPanel } from \"../components/panel/user/MenuPanel\";\r\nimport { Data } from \"../components/panel/user/Data\";\r\nimport { Wishes } from \"../components/panel/user/Wishes\";\r\nimport { Ratings } from \"../components/panel/user/Ratings\";\r\nimport { Orders } from \"../components/panel/user/Orders\";\r\nimport { OrdersDetail } from \"../components/panel/user/OrdersDetail\";\r\nimport { AdminPanel } from \"../components/panel/admin/AdminPanel\";\r\nimport { Users } from \"../components/panel/admin/Users\";\r\nimport { Categories } from \"../components/panel/admin/Categories\";\r\nimport { CategoryDetail } from \"../components/panel/admin/CategoryDetail\";\r\nimport { Products } from \"../components/panel/admin/Products\";\r\nimport { ProductDetail } from \"../components/panel/admin/ProductDetail\";\r\n\r\n\r\nexport const PanelRouter = () => {\r\n\r\n    const { rol } = useSelector(state => state.auth);\r\n\r\n    const { pathname, search } = useLocation();\r\n    localStorage.setItem('lastPath', pathname + search);\r\n\r\n    return (\r\n\r\n        <div className=\"d-flex flex-column min-vh-100\">\r\n\r\n            <TopBar />\r\n\r\n            <Container>\r\n\r\n                {\r\n                    rol === \"USER_ROLE\"\r\n                        ? <Routes>\r\n                            <Route path=\"datos\" element={\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <MenuPanel />\r\n                                    </Col>\r\n                                    <Col md={10}>\r\n                                        <Data />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"deseos\" element={\r\n                                <Wishes />\r\n                            } />\r\n                            <Route path=\"valoraciones\" element={\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <MenuPanel />\r\n                                    </Col>\r\n                                    <Col md={10}>\r\n                                        <Ratings />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"pedidos\" element={\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <MenuPanel />\r\n                                    </Col>\r\n                                    <Col md={10}>\r\n                                        <Orders />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"pedidos/detalles\" element={\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <MenuPanel />\r\n                                    </Col>\r\n                                    <Col md={10}>\r\n                                        <OrdersDetail />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route\r\n                                path=\"/\"\r\n                                element={<Navigate to=\"/panel/datos\" />}\r\n                            />\r\n                            <Route path=\"/*\" element={<Navigate to=\"/\" />} />\r\n                        </Routes>\r\n                        : <Routes>\r\n                            <Route path=\"usuarios\" element={\r\n                                <Row>\r\n                                    <Col md={12} lg={2}>\r\n                                        <AdminPanel />\r\n                                    </Col>\r\n                                    <Col md={12} lg={10}>\r\n                                        <Users />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"categorias\" element={\r\n                                <Row>\r\n                                    <Col md={12} lg={2}>\r\n                                        <AdminPanel />\r\n                                    </Col>\r\n                                    <Col md={12} lg={10}>\r\n                                        <Categories />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"categorias/:CategoriaNombre\" element={\r\n                                <Row>\r\n                                    <Col md={12} lg={2}>\r\n                                        <AdminPanel />\r\n                                    </Col>\r\n                                    <Col md={12} lg={10}>\r\n                                        <CategoryDetail />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"productos\" element={\r\n                                <Row>\r\n                                    <Col md={12} lg={2}>\r\n                                        <AdminPanel />\r\n                                    </Col>\r\n                                    <Col md={12} lg={10}>\r\n                                        <Products />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route path=\"productos/:ProductoNombre\" element={\r\n                                <Row>\r\n                                    <Col md={12} lg={2}>\r\n                                        <AdminPanel />\r\n                                    </Col>\r\n                                    <Col md={12} lg={10}>\r\n                                        <ProductDetail />\r\n                                    </Col>\r\n                                </Row>\r\n                            } />\r\n                            <Route\r\n                                path=\"/\"\r\n                                element={<Navigate to=\"/panel/usuarios\" />}\r\n                            />\r\n                            <Route path=\"/*\" element={<Navigate to=\"/\" />} />\r\n                        </Routes>\r\n                }\r\n\r\n            </Container>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\n\r\n\r\nexport const shippingInit = (envio) => {\r\n    return {\r\n        type: types.shippingInit,\r\n        payload: envio\r\n    }\r\n}\r\n\r\nexport const shippingInitBilling = (facturacion) => {\r\n    return {\r\n        type: types.shippingInitBilling,\r\n        payload: facturacion\r\n    }\r\n}\r\n\r\nexport const shippingSetActive = (envio) => {\r\n    return {\r\n        type: types.shippingSetActive,\r\n        payload: envio\r\n    }\r\n}\r\n\r\nexport const shippingSetDefault = (id) => {\r\n    return {\r\n        type: types.shippingSetDefault,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const shippingStartAddNew = (newEnvio) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        let enviar;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/envio/${uid}`, newEnvio, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                enviar = body.envio.find(element => element.direccion.calle === newEnvio.direccion.calle && element.direccion.numero === newEnvio.direccion.numero);\r\n                newEnvio._id = enviar._id;\r\n                dispatch(shippingAddNew(newEnvio));\r\n            }\r\n            return Promise.resolve(enviar._id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingAddNew = (envio) => {\r\n    return {\r\n        type: types.shippingAddNew,\r\n        payload: envio\r\n    }\r\n}\r\n\r\nexport const shippingStartUpdate = (newEnvio) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/envio/${uid}`, newEnvio, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                const enviar = body.envio.find(element => element._id === newEnvio._id);\r\n                dispatch(shippingUpdate(enviar));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingUpdate = (enviar) => {\r\n    return {\r\n        type: types.shippingUpdate,\r\n        payload: enviar\r\n    }\r\n}\r\n\r\nexport const shippingStartDelete = (idEnvio) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`usuarios/envio/${uid}`, { idEnvio }, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                dispatch(shippingDelete(idEnvio));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingDelete = (idEnvio) => {\r\n    return {\r\n        type: types.shippingDelete,\r\n        payload: idEnvio\r\n    }\r\n}\r\n\r\n\r\nexport const shippingStartSort = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`usuarios/${uid}`);\r\n            const body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                const { usuario } = body;\r\n                if (usuario.envio.length > 1) {\r\n                    const foundIdx = usuario.envio.findIndex(el => el._id === usuario.predeterminado)\r\n                    const ar = usuario.envio.splice(foundIdx, 1)\r\n                    const [direccion] = ar;\r\n                    usuario.envio.unshift(direccion)\r\n                    try {\r\n                        const envio = usuario.envio;\r\n                        const resp = await fetchConToken(`usuarios/${uid}`, { envio }, 'PUT');\r\n                        const body = await resp.json();\r\n                        if (body.msg) { // Si hay errores\r\n                            Swal.fire('Error', body.msg, 'error');\r\n                        } else {\r\n                            dispatch(shippingSort(usuario.envio));\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingSort = (envios) => {\r\n    return {\r\n        type: types.shippingSort,\r\n        payload: envios\r\n    }\r\n}\r\n\r\nexport const shippingStartAddBilling = (facturacion) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        const { poblacion, pais, calle, numero, codigo, provincia } = facturacion;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/facturacion/${uid}`, { poblacion, pais, calle, numero, codigo, provincia }, 'POST');\r\n            const body = await resp.json();\r\n            if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                dispatch(shippingAddBilling(facturacion));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst shippingAddBilling = (facturacion) => {\r\n    return {\r\n        type: types.shippingAddBilling,\r\n        payload: facturacion\r\n    }\r\n}\r\n\r\nexport const shippingStartUpdateBilling = (facturacion) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`usuarios/facturacion/${uid}`, facturacion, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                dispatch(shippingUpdateBilling(facturacion));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingUpdateBilling = (facturacion) => {\r\n    return {\r\n        type: types.shippingUpdateBilling,\r\n        payload: facturacion\r\n    }\r\n}\r\n\r\nexport const shippingStartDeleteBilling = (idEnvio) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`usuarios/facturacion/${uid}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                dispatch(shippingDeleteBilling());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst shippingDeleteBilling = () => {\r\n    return {\r\n        type: types.shippingDeleteBilling,\r\n    }\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, FormGroup, FormLabel, FormText, Form as FormRB, Row, Col } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { shippingModalChange } from '../../../actions/ui';\r\nimport { shippingSetActive, shippingSetDefault, shippingStartAddBilling, shippingStartAddNew, shippingStartSort, shippingStartUpdate } from '../../../actions/shipping';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const ShippingForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { uid, nombre } = useSelector(state => state.auth);\r\n    const { activo } = useSelector(state => state.shipping);\r\n\r\n    const handleRegister = async ({ direccion, nombre, telefono }) => {\r\n\r\n        let newEnvio;\r\n        let body;\r\n        let predeterminado;\r\n\r\n        if (!activo) {\r\n            newEnvio = { direccion, nombre, telefono };\r\n            await dispatch(shippingStartAddNew(newEnvio)).then((result) => {\r\n                predeterminado = result;\r\n            });\r\n        } else {\r\n            const { _id } = activo;\r\n            newEnvio = { _id, direccion, nombre, telefono };\r\n            dispatch(shippingStartUpdate(newEnvio));\r\n            predeterminado = _id;\r\n        }\r\n\r\n        if (document.querySelector(\"input[name=checkbox1]:checked\")) { // Marcar dirección de envío como predeterminada\r\n            dispatch(shippingSetDefault(predeterminado));\r\n            newEnvio = { predeterminado }\r\n            const resp = await fetchConToken(`usuarios/${uid}`, newEnvio, 'PUT');\r\n            body = await resp.json();\r\n            if (body.msg) { // Si hay errores\r\n                console.log('Hola Mundo');\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                const enviar = body.usuario.envio.find(element => element._id === predeterminado);\r\n                dispatch(shippingStartUpdate(enviar));\r\n                dispatch(shippingStartSort());\r\n            }\r\n        }\r\n\r\n        const id = document.querySelector(\"input[name=checkbox2]:checked\")?.id; // Dirección de facturación igual a la dirección de envío\r\n        if (id) {\r\n            dispatch(shippingStartAddBilling(direccion));\r\n        }\r\n\r\n        dispatch(shippingModalChange(false));\r\n        dispatch(shippingSetActive());\r\n\r\n    }\r\n\r\n    const handleAuto = (setFieldValue) => {\r\n        setFieldValue(\"nombre\", nombre);\r\n        setFieldValue(\"telefono\", \"666666666\");\r\n        setFieldValue(\"direccion.calle\", \"Calle Marina\");\r\n        setFieldValue(\"direccion.numero\", \"Número 7, 8º A\");\r\n        setFieldValue(\"direccion.pais\", \"España\");\r\n        setFieldValue(\"direccion.codigo\", \"21003\");\r\n        setFieldValue(\"direccion.poblacion\", \"Huelva\");\r\n        setFieldValue(\"direccion.provincia\", \"Huelva\");\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                direccion: {\r\n                    poblacion: activo?.direccion.poblacion || '',\r\n                    pais: activo?.direccion.pais || '',\r\n                    calle: activo?.direccion.calle || '',\r\n                    numero: activo?.direccion.numero || '',\r\n                    codigo: activo?.direccion.codigo || '',\r\n                    provincia: activo?.direccion.provincia || '',\r\n                },\r\n                nombre: activo?.nombre || '',\r\n                telefono: activo?.telefono || '',\r\n            }}\r\n            validationSchema={Yup.object({\r\n                nombre: Yup.string()\r\n                    .required('Requerido'),\r\n                telefono: Yup.number()\r\n                    .test('len', 'El teléfono debe tener 9 números', val => val && val.toString().length === 9)\r\n                    .typeError('Debe especificar un número')\r\n                    .required('Requerido'),\r\n                direccion: Yup.object({\r\n                    poblacion: Yup.string()\r\n                        .required('Requerido'),\r\n                    pais: Yup.string()\r\n                        .required('Requerido'),\r\n                    calle: Yup.string()\r\n                        .required('Requerido'),\r\n                    numero: Yup.string()\r\n                        .required('Requerido'),\r\n                    codigo: Yup.number()\r\n                        .test('len', 'El código debe tener 5 números', val => val && val.toString().length === 5)\r\n                        .typeError('Debe especificar un número')\r\n                        .required('Requerido'),\r\n                    provincia: Yup.string()\r\n                        .required('Requerido'),\r\n                })\r\n            })}\r\n            onSubmit={handleRegister}\r\n        >\r\n            {({ setFieldValue }) => (\r\n                <Form>\r\n                    <Button className='float-end' variant=\"warning\" onClick={() => handleAuto(setFieldValue)}>Rellenar automáticamente</Button>\r\n                    <h4 style={{ \"display\": \"inline\" }}>Datos personales</h4>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Nombre\"\r\n                                name=\"nombre\"\r\n                                placeholder=\"Nombre*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Teléfono\"\r\n                                name=\"telefono\"\r\n                                placeholder=\"Teléfono*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <h4 className='mt-4'>Dirección de envío</h4>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Dirección\"\r\n                                name=\"direccion.calle\"\r\n                                placeholder=\"Dirección*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Información adicional\"\r\n                                name=\"direccion.numero\"\r\n                                placeholder=\"Piso, escalera, puerta, etc.*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"País\"\r\n                                name=\"direccion.pais\"\r\n                                placeholder=\"País*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Código postal\"\r\n                                name=\"direccion.codigo\"\r\n                                placeholder=\"Código postal*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Población\"\r\n                                name=\"direccion.poblacion\"\r\n                                placeholder=\"Población*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Provincia\"\r\n                                name=\"direccion.provincia\"\r\n                                placeholder=\"Provincia*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <div key=\"checkbox-default\" className=\"mt-4 mb-4\">\r\n                        <FormRB.Check\r\n                            defaultChecked\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox1\"\r\n                            name=\"checkbox1\"\r\n                            label=\"Establecer esta dirección como predeterminada (para futuras compras)\"\r\n                        />\r\n                        <FormRB.Check\r\n                            defaultChecked\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox2\"\r\n                            name=\"checkbox2\"\r\n                            label=\"Usar mismos datos de envío para la facturación\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-grid mt-4\">\r\n                        <Button type=\"submit\">\r\n                            Guardar dirección\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, FormControl, FormGroup, FormLabel, FormText, Row } from 'react-bootstrap';\r\n\r\nimport { shippingModalChange } from '../../../actions/ui';\r\nimport { shippingStartAddBilling } from '../../../actions/shipping';\r\n\r\n\r\nconst MyTextInput = ({ label, type, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormGroup className=\"mt-2\">\r\n            <FormLabel htmlFor={props.id || props.name}>{label}</FormLabel>\r\n            <FormControl as={type} {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <FormText className='text-danger'>{meta.error}</FormText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const ShippingFormBilling = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { facturacion } = useSelector(state => state.shipping);\r\n\r\n    const handleRegister = ({ direccion }) => {\r\n\r\n        dispatch(shippingStartAddBilling(direccion));\r\n        dispatch(shippingModalChange(false));\r\n\r\n    }\r\n\r\n    const handleAuto = (setFieldValue) => {\r\n        setFieldValue(\"direccion.calle\", \"Calle Marina\");\r\n        setFieldValue(\"direccion.numero\", \"Número 7, 8º A\");\r\n        setFieldValue(\"direccion.pais\", \"España\");\r\n        setFieldValue(\"direccion.codigo\", \"21003\");\r\n        setFieldValue(\"direccion.poblacion\", \"Huelva\");\r\n        setFieldValue(\"direccion.provincia\", \"Huelva\");\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                direccion: {\r\n                    poblacion: facturacion?.poblacion || '',\r\n                    pais: facturacion?.pais || '',\r\n                    calle: facturacion?.calle || '',\r\n                    numero: facturacion?.numero || '',\r\n                    codigo: facturacion?.codigo || '',\r\n                    provincia: facturacion?.provincia || '',\r\n                },\r\n            }}\r\n            validationSchema={Yup.object({\r\n                direccion: Yup.object({\r\n                    poblacion: Yup.string()\r\n                        .required('Requerido'),\r\n                    pais: Yup.string()\r\n                        .required('Requerido'),\r\n                    calle: Yup.string()\r\n                        .required('Requerido'),\r\n                    numero: Yup.string()\r\n                        .required('Requerido'),\r\n                    codigo: Yup.number()\r\n                        .test('len', 'El código debe tener 5 números', val => val && val.toString().length === 5)\r\n                        .required('Requerido'),\r\n                    provincia: Yup.string()\r\n                        .required('Requerido'),\r\n                })\r\n            })}\r\n            onSubmit={handleRegister}\r\n        >\r\n            {({ setFieldValue }) => (\r\n                <Form>\r\n                    <Button className='float-end' variant=\"warning\" onClick={() => handleAuto(setFieldValue)}>Rellenar automáticamente</Button>\r\n                    <h4 style={{ \"display\": \"inline\" }}>Dirección de envío</h4>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Dirección\"\r\n                                name=\"direccion.calle\"\r\n                                placeholder=\"Dirección*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Información adicional\"\r\n                                name=\"direccion.numero\"\r\n                                placeholder=\"Piso, escalera, puerta, etc.*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"País\"\r\n                                name=\"direccion.pais\"\r\n                                placeholder=\"País*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Código postal\"\r\n                                name=\"direccion.codigo\"\r\n                                placeholder=\"Código postal*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-2'>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Población\"\r\n                                name=\"direccion.poblacion\"\r\n                                placeholder=\"Población*\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <MyTextInput\r\n                                label=\"Provincia\"\r\n                                name=\"direccion.provincia\"\r\n                                placeholder=\"Provincia*\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"d-grid mt-4\">\r\n                        <Button type=\"submit\">\r\n                            Guardar dirección\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}","import { Button, Modal } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { ShippingForm } from './ShippingForm';\r\nimport { ShippingFormBilling } from './ShippingFormBilling';\r\n\r\n\r\nexport const ShippingModal = (props) => {\r\n\r\n    const { elegirShippingModal } = useSelector(state => state.ui);\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {\r\n                        elegirShippingModal\r\n                            ? \"Añadir dirección de envío\"\r\n                            : \"Añadir dirección de facturación\"\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    elegirShippingModal\r\n                        ? <ShippingForm />\r\n                        : <ShippingFormBilling />\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Cerrar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Card, Form, ListGroup } from 'react-bootstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { shippingModalChange, shippingModalElegir, stepChange } from '../../../actions/ui';\r\nimport { ShippingModal } from './ShippingModal';\r\nimport { shippingSetActive, shippingStartDelete, shippingStartDeleteBilling } from '../../../actions/shipping';\r\n\r\n\r\nexport const ShippingList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { shippingModal } = useSelector(state => state.ui);\r\n    const { nombre } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n    const { envio, facturacion, predeterminado } = useSelector(state => state.shipping);\r\n\r\n    useEffect(() => {\r\n        dispatch(stepChange(2));\r\n        localStorage.setItem('step', 2);\r\n    }, [dispatch]);\r\n\r\n    const handleSave = () => {\r\n        if (document.querySelector(\"input[name=check_envio]:checked\")) {\r\n            if (facturacion) {\r\n                const id = document.querySelector(\"input[name=check_envio]:checked\").id;\r\n                const enviar = envio.find(element => element._id === id);\r\n                dispatch(stepChange(3));\r\n                localStorage.setItem('step', 3);\r\n                navigate(\"/payment\", {\r\n                    state: {\r\n                        direccion: enviar,\r\n                        facturacion: facturacion\r\n                    }\r\n                });\r\n            } else {\r\n                Swal.fire('Error', \"No ha elegido una dirección de facturación\", 'error');\r\n            }\r\n        } else {\r\n            Swal.fire('Error', \"No ha elegido una dirección de envío\", 'error');\r\n        }\r\n    }\r\n\r\n    const activar = (id, e) => {\r\n        e.preventDefault();\r\n        document.getElementById(id).checked = true;\r\n    }\r\n\r\n    const handleDelete = (idEnvio) => {\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"No podrás revertir esto\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (idEnvio) {\r\n                    dispatch(shippingStartDelete(idEnvio));\r\n                } else {\r\n                    dispatch(shippingStartDeleteBilling());\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (idEnvio) => {\r\n        if (idEnvio) {\r\n            dispatch(shippingModalElegir(true));\r\n            const enviar = envio.find(element => element._id === idEnvio);\r\n            dispatch(shippingSetActive(enviar));\r\n        } else {\r\n            dispatch(shippingModalElegir(false));\r\n        }\r\n        dispatch(shippingModalChange(true));\r\n    }\r\n\r\n    const handleHide = () => {\r\n        dispatch(shippingModalChange(false));\r\n        dispatch(shippingSetActive());\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn mb-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-7 col-lg-8\">\r\n                    <h4 className='mb-3'>Dirección de envío</h4>\r\n                    <Form>\r\n                        <TransitionGroup className=\"todo-list\">\r\n                            {\r\n                                envio.map(direccion => (\r\n                                    <CSSTransition\r\n                                        key={direccion._id}\r\n                                        timeout={500}\r\n                                        classNames=\"item\"\r\n                                    >\r\n                                        <div className=\"row mt-1\">\r\n                                            <div className=\"col-12 col-lg-8\">\r\n                                                <ListGroup>\r\n                                                    <ListGroup.Item className=\"border-0\" action onClick={(e) => activar(direccion._id, e)}>\r\n                                                        {\r\n                                                            predeterminado === direccion._id &&\r\n                                                            <Form.Check\r\n                                                                defaultChecked\r\n                                                                type=\"radio\"\r\n                                                                id={direccion._id}\r\n                                                                label={direccion.nombre}\r\n                                                                name=\"check_envio\"\r\n                                                                style={{ \"fontWeight\": \"bold\", \"pointerEvents\": \"none\" }}\r\n                                                            />\r\n                                                        }\r\n                                                        {\r\n                                                            predeterminado !== direccion._id &&\r\n                                                            <Form.Check\r\n                                                                type=\"radio\"\r\n                                                                id={direccion._id}\r\n                                                                label={direccion.nombre}\r\n                                                                name=\"check_envio\"\r\n                                                                style={{ \"fontWeight\": \"bold\", \"pointerEvents\": \"none\" }}\r\n                                                            />\r\n                                                        }\r\n                                                        <div className=\"mb-3\">{direccion.direccion.calle}, {direccion.direccion.numero}, {direccion.direccion.codigo}, {direccion.direccion.poblacion}, {direccion.direccion.provincia}, {direccion.direccion.pais}</div>\r\n                                                    </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </div>\r\n                                            <div className=\"col-12 col-lg-4 mb-4 mb-lg-0\" style={{ \"display\": \"flex\", \"justifyContent\": \"right\", \"alignItems\": \"center\" }}>\r\n                                                <Button\r\n                                                    className=\"me-1\"\r\n                                                    style={{ \"width\": \"80px\" }}\r\n                                                    variant=\"outline-secondary\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => handleEdit(direccion._id)}\r\n                                                >\r\n                                                    Editar\r\n                                                </Button>\r\n                                                <Button\r\n                                                    className=\"me-3\"\r\n                                                    style={{ \"width\": \"80px\" }}\r\n                                                    variant=\"outline-secondary\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => handleDelete(direccion._id)}\r\n                                                >\r\n                                                    Eliminar\r\n                                                </Button>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </div>\r\n                                    </CSSTransition>\r\n                                ))\r\n                            }\r\n                        </TransitionGroup>\r\n                    </Form>\r\n                    <Button\r\n                        className=\"mt-2 mb-5\"\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            dispatch(shippingModalElegir(true));\r\n                            dispatch(shippingModalChange(true));\r\n                        }}\r\n                    >\r\n                        {\r\n                            envio.length === 0\r\n                                ? <div>Añadir dirección</div>\r\n                                : <div>Añadir otra dirección</div>\r\n                        }\r\n                    </Button>\r\n                    {\r\n                        envio.length !== 0 &&\r\n                        <>\r\n                            <h4>Dirección de facturación</h4>\r\n                            <TransitionGroup className=\"todo-list\">\r\n                                <CSSTransition\r\n                                    timeout={500}\r\n                                    classNames=\"item\"\r\n                                >\r\n                                    {\r\n                                        facturacion\r\n                                            ? <Form>\r\n                                                <div className=\"row mt-1\">\r\n                                                    <div className=\"col-12 col-lg-8\">\r\n                                                        <ListGroup>\r\n                                                            <ListGroup.Item className=\"border-0\" action onClick={(e) => activar(facturacion._id, e)}>\r\n                                                                <Form.Check\r\n                                                                    defaultChecked\r\n                                                                    type=\"radio\"\r\n                                                                    id={facturacion._id}\r\n                                                                    label={nombre}\r\n                                                                    name=\"check_facturacion\"\r\n                                                                    style={{ \"fontWeight\": \"bold\", \"pointerEvents\": \"none\" }}\r\n                                                                />\r\n                                                                <div className=\"mb-3\">{facturacion.calle}, {facturacion.numero}, {facturacion.codigo}, {facturacion.poblacion}, {facturacion.provincia}, {facturacion.pais}</div>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </div>\r\n                                                    <div className=\"col-12 col-lg-4 mb-4 mb-lg-0\" style={{ \"display\": \"flex\", \"justifyContent\": \"right\", \"alignItems\": \"center\" }}>\r\n                                                        <Button\r\n                                                            className=\"me-1\"\r\n                                                            style={{ \"width\": \"80px\" }}\r\n                                                            variant=\"outline-secondary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleEdit()}\r\n                                                        >\r\n                                                            Editar\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            className=\"me-3\"\r\n                                                            style={{ \"width\": \"80px\" }}\r\n                                                            variant=\"outline-secondary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleDelete()}\r\n                                                        >\r\n                                                            Eliminar\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form>\r\n                                            : <Button\r\n                                                className=\"mt-2 mb-5\"\r\n                                                variant=\"primary\"\r\n                                                onClick={() => {\r\n                                                    dispatch(shippingModalElegir(false));\r\n                                                    dispatch(shippingModalChange(true));\r\n                                                }}\r\n                                            >\r\n                                                Añadir dirección\r\n                                            </Button>\r\n                                    }\r\n                                </CSSTransition>\r\n                            </TransitionGroup>\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"col-12 col-md-5 col-lg-4\">\r\n                    <Card>\r\n                        <Card.Header as=\"h5\" className=\"text-center\">TOTAL</Card.Header>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Card.Title>{carrito.reduce((n, { unidades, producto }) => n + unidades * producto.precio, 0).toFixed(2)} €</Card.Title>\r\n                            <div className=\"mt-4 d-grid gap-2\">\r\n                                <Button\r\n                                    className=\"mt-1\"\r\n                                    variant=\"warning\"\r\n                                    size=\"lg\"\r\n                                    onClick={handleSave}\r\n                                >\r\n                                    Guardar y continuar\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <ShippingModal\r\n                show={shippingModal}\r\n                onHide={handleHide}\r\n            />\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ShippingList } from './ShippingList';\r\nimport { fetchConToken } from '../../../helpers/fetch';\r\nimport { shippingInit, shippingSetDefault, shippingStartAddBilling } from '../../../actions/shipping';\r\n\r\n\r\nexport const Shipping = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const resp = await fetchConToken(`usuarios/${uid}`);\r\n            const { usuario } = await resp.json();\r\n            dispatch(shippingInit(usuario.envio));\r\n            if (usuario.facturacion) {\r\n                await dispatch(shippingStartAddBilling(usuario.facturacion));\r\n            }\r\n            dispatch(shippingSetDefault(usuario.predeterminado));\r\n            setChecking(true);\r\n        }\r\n        fetchData();\r\n    }, [dispatch, uid]);\r\n\r\n    return (\r\n        checking && <ShippingList />\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\nimport {\r\n    PaymentElement,\r\n    useStripe,\r\n    useElements\r\n} from \"@stripe/react-stripe-js\";\r\n\r\n\r\nexport const PaymentForm = () => {\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [visible, setVisible] = useState(\"hidden\");\r\n\r\n    useEffect(() => {\r\n        if (!stripe) {\r\n            return;\r\n        }\r\n\r\n        const clientSecret = new URLSearchParams(window.location.search).get(\r\n            \"payment_intent_client_secret\"\r\n        );\r\n\r\n        if (!clientSecret) {\r\n            return;\r\n        }\r\n\r\n        stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n            switch (paymentIntent.status) {\r\n                case \"succeeded\":\r\n                    setMessage(\"Payment succeeded!\");\r\n                    break;\r\n                case \"processing\":\r\n                    setMessage(\"Your payment is processing.\");\r\n                    break;\r\n                case \"requires_payment_method\":\r\n                    setMessage(\"Your payment was not successful, please try again.\");\r\n                    break;\r\n                default:\r\n                    setMessage(\"Something went wrong.\");\r\n                    break;\r\n            }\r\n        });\r\n    }, [stripe]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const { error } = await stripe.confirmPayment({\r\n            elements,\r\n            confirmParams: {\r\n                // Make sure to change this to your payment completion page\r\n                return_url: `${process.env.REACT_APP_REACT}/summary`,\r\n            },\r\n        });\r\n\r\n        // This point will only be reached if there is an immediate error when\r\n        // confirming the payment. Otherwise, your customer will be redirected to\r\n        // your `return_url`. For some payment methods like iDEAL, your customer will\r\n        // be redirected to an intermediate site first to authorize the payment, then\r\n        // redirected to the `return_url`.\r\n        if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n            setMessage(error.message);\r\n        } else {\r\n            setMessage(\"An unexpected error occured.\");\r\n        }\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const visibleForm = () => {\r\n        setVisible(\"visible\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form id=\"payment-form\" onSubmit={handleSubmit} style={{ visibility: visible }}>\r\n                <PaymentElement id=\"payment-element\" onReady={visibleForm} />\r\n                <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n                    <span id=\"button-text\">\r\n                        {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Confirmar pago\"}\r\n                    </span>\r\n                </button>\r\n                {/* Show any error or success messages */}\r\n                {message && <div id=\"payment-message\">{message}</div>}\r\n            </form>\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { Col, ListGroup, Row, Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./payment.css\";\r\nimport { PaymentForm } from \"./PaymentForm\";\r\nimport { fetchConToken } from \"../../../helpers/fetch\";\r\n\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// This is your test publishable API key.\r\nconst stripePromise = loadStripe(\"pk_test_51KZH9rK7t3f78Hp2q0mtyopW0RtVqrg0MxOhtmG7KCKeYZMyuEZjsrFrCcWEhSjB6rQY9EkAxBLoxB3fl6o0iMf400VxcbHZvO\");\r\n\r\n\r\nexport const Payment = () => {\r\n\r\n    const location = useLocation();\r\n    const direccion = location.state;\r\n\r\n    const { uid, correo } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    const [clientSecret, setClientSecret] = useState(\"\");\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Create PaymentIntent as soon as the page loads\r\n        fetchConToken(`pagos/${uid}`, { correo, direccion, items: carrito }, 'POST')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setClientSecret(data.clientSecret)\r\n                setChecking(true);\r\n            });\r\n    }, [uid, correo, direccion, carrito]);\r\n\r\n    const appearance = {\r\n        theme: 'stripe',\r\n    };\r\n\r\n    const options = {\r\n        clientSecret,\r\n        appearance,\r\n    };\r\n\r\n    const copyText = (entryText) => {\r\n        navigator.clipboard.writeText(entryText);\r\n    }\r\n\r\n    return (\r\n        checking\r\n            ? <div className=\"d-flex justify-content-center mt-2 mt-sm-5 animate__animated animate__fadeIn mb-5\">\r\n                <Row>\r\n                    <Col xs={12} lg={5} className=\"align-self-center mb-4\">\r\n                        <div className='d-flex justify-content-center'>\r\n                            <div>\r\n                                <h4>Tarjetas Test Stripe</h4>\r\n                                <ul>\r\n                                    <li>La web utiliza Stripe como método de pago</li>\r\n                                    <li><strong>Los pagos son reales</strong></li>\r\n                                    <li>Stripe pone a disposición  del usuario las siguientes tarjetas para realizar los test de funcionamiento</li>\r\n                                </ul>\r\n                                <div className='d-flex justify-content-center'>\r\n                                    <ListGroup className='mt-3'>\r\n                                        <ListGroup.Item className='border-0'>\r\n                                            <div className=\"d-flex\">\r\n                                                <div style={{ \"width\": \"35px\" }}>\r\n                                                    <i className=\"fa-solid fa-check fa-xl me-2\"></i>\r\n                                                </div>\r\n                                                <b> El pago se efectúa correctamente</b>\r\n                                            </div>\r\n                                            <div className='mt-2 ms-5'>\r\n                                                Número de tarjeta:\r\n                                                <span className=\"ms-4 float-end text-primary\">\r\n                                                    4242 4242 4242 4242\r\n                                                    <button className=\"ms-2 botonClipboard\" onClick={() => copyText('4242 4242 4242 4242')}><i className=\"fa-solid fa-clipboard\"></i></button>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className='ms-5'>\r\n                                                Caducidad:\r\n                                                <span className=\"float-end text-primary\">\r\n                                                    Cualquier fecha futura\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className='ms-5'>\r\n                                                CVC:\r\n                                                <span className=\"float-end text-primary\">\r\n                                                    Cualquier número CVC aleatorio\r\n                                                </span>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className='border-0'>\r\n                                            <div className=\"d-flex\">\r\n                                                <div style={{ \"width\": \"35px\" }}>\r\n                                                    <i className=\"fa-solid fa-exclamation fa-xl ms-1 me-2\"></i>\r\n                                                </div>\r\n                                                <b> El pago requiere autenticación</b>\r\n                                            </div>\r\n                                            <div className='mt-2 ms-5'>\r\n                                                Número de tarjeta:\r\n                                                <span className=\"ms-4 float-end\">\r\n                                                    <span>4000 0025 0000 3155</span>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className='ms-5'>Caducidad: <span className=\"float-end\">Cualquier fecha futura</span></div>\r\n                                            <div className='ms-5'>CVC: <span className=\"float-end\">Cualquier número CVC aleatorio</span></div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className='border-0'>\r\n                                            <div className=\"d-flex\">\r\n                                                <div style={{ \"width\": \"35px\" }}>\r\n                                                    <i className=\"fa-solid fa-xmark fa-xl me-2\"></i>\r\n                                                </div>\r\n                                                <b> Se rechaza el pago</b>\r\n                                            </div>\r\n                                            <div className='mt-2 ms-5'>\r\n                                                Número de tarjeta:\r\n                                                <span className=\"ms-4 float-end\">\r\n                                                    4000 0000 0000 9995\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className='ms-5'>Caducidad: <span className=\"float-end\">Cualquier fecha futura</span></div>\r\n                                            <div className='ms-5'>CVC: <span className=\"float-end\">Cualquier número CVC aleatorio</span></div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} lg={7}>\r\n                        <div className='d-flex justify-content-center mt-2 ms-4'>\r\n                            <div className=\"Checkout\">\r\n                                {clientSecret && (\r\n                                    <Elements options={options} stripe={stripePromise}>\r\n                                        <PaymentForm />\r\n                                    </Elements>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            : <div className=\"d-flex justify-content-center align-items-center\" style={{ \"height\": \"25rem\" }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\n\r\nimport { stepChange } from '../../actions/ui';\r\n\r\n\r\nexport const CartStepper = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { step } = useSelector(state => state.ui);\r\n\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(stepChange(JSON.parse(localStorage.getItem('step'))));\r\n        setChecking(true);\r\n    }, [dispatch]);\r\n\r\n\r\n    const handleClick = (n) => {\r\n        dispatch(stepChange(n));\r\n        localStorage.setItem('step', n);\r\n    }\r\n\r\n    return (\r\n        checking &&\r\n        <Stepper\r\n            activeStep={step}\r\n            connectorStateColors\r\n        >\r\n            <Step\r\n                label=\"Cesta\"\r\n                children={step > 1 ? <div><i className=\"fa-solid fa-check\"></i></div> : 1}\r\n                onClick={() => {\r\n                    navigate(\"/cart\");\r\n                    handleClick(1);\r\n                }}\r\n            />\r\n            <Step\r\n                label=\"Dirección de envío\"\r\n                children={step > 2 ? <div><i className=\"fa-solid fa-check\"></i></div> : 2}\r\n                disabled={step < 2}\r\n                onClick={() => {\r\n                    navigate(\"/shipping\");\r\n                    handleClick(2);\r\n                }}\r\n            />\r\n            <Step\r\n                label=\"Método de pago\"\r\n                children={step > 3 ? <div><i className=\"fa-solid fa-check\"></i></div> : 3}\r\n                disabled={step < 3}\r\n                onClick={() => {\r\n                    navigate(\"/payment\");\r\n                    handleClick(3);\r\n                }}\r\n            />\r\n            <Step\r\n                label=\"Resumen\"\r\n                children={step > 4 ? <div><i className=\"fa-solid fa-check\"></i></div> : 4}\r\n                disabled={step < 4}\r\n                onClick={() => {\r\n                    navigate(\"/summary\");\r\n                    handleClick(4);\r\n                }}\r\n            />\r\n        </Stepper>\r\n    )\r\n}","import { useEffect } from \"react\"\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\"\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\"\r\nimport { HomeRouter } from \"./HomeRouter\"\r\nimport { PrivateRoute } from \"./PrivateRoute\"\r\nimport { PanelRouter } from \"./PanelRouter\"\r\nimport { Shipping } from \"../components/cart/shipping/Shipping\"\r\nimport { Payment } from \"../components/cart/payment/Payment\"\r\nimport { CartStepper } from \"../components/ui/Stepper\"\r\n\r\nimport { startChecking } from \"../actions/auth\"\r\nimport { cartInit } from \"../actions/cart\"\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n    const { carrito } = useSelector(state => state.cart);\r\n\r\n    useEffect(() => { // Restaura la autenticación al recargar el navegador\r\n        dispatch(startChecking())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => { // Restaura el carrito de compras al recargar el navegador\r\n        const oldCart = JSON.parse(localStorage.getItem('carrito'));\r\n        if (oldCart)\r\n            dispatch(cartInit(oldCart));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        !checking &&\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route\r\n                    path=\"registro\"\r\n                    element=\r\n                    {\r\n                        <RegisterScreen />\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"registro/*\"\r\n                    element={<Navigate to=\"/\" />}\r\n                />\r\n                <Route\r\n                    path=\"login\"\r\n                    element=\r\n                    {\r\n                        <LoginScreen />\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/login/*\"\r\n                    element={<Navigate to=\"/\" />}\r\n                />\r\n                <Route\r\n                    path=\"shipping\"\r\n                    element=\r\n                    {\r\n                        <>\r\n                            <CartStepper />\r\n\r\n                            <div className=\"container\">\r\n                                <PrivateRoute isAuthenticated={!!uid}>\r\n                                    {\r\n                                        carrito.length > 0\r\n                                            ? <Shipping />\r\n                                            : <Navigate to=\"/\" replace={true} />\r\n                                    }\r\n                                </PrivateRoute>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"payment\"\r\n                    element=\r\n                    {\r\n                        <>\r\n                            <CartStepper />\r\n\r\n                            <div className=\"container\">\r\n                                <PrivateRoute isAuthenticated={!!uid}>\r\n                                    {\r\n                                        carrito.length > 0\r\n                                            ? <Payment />\r\n                                            : <Navigate to=\"/\" replace={true} />\r\n                                    }\r\n                                </PrivateRoute>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"panel/*\"\r\n                    element=\r\n                    {\r\n                        <PrivateRoute isAuthenticated={!!uid}>\r\n                            <PanelRouter />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/*\"\r\n                    element=\r\n                    {\r\n                        <HomeRouter />\r\n                    }\r\n                />\r\n            </Routes>\r\n        </BrowserRouter >\r\n    )\r\n}","import { Provider } from \"react-redux\"\r\n\r\nimport { store } from \"./store/store\"\r\nimport { AppRouter } from \"./routers/AppRouter\"\r\n\r\n\r\nexport const Ecommerce = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}","import ReactDOM from 'react-dom';\r\n\r\nimport './styles.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'animate.css';\r\n\r\nimport { Ecommerce } from './Ecommerce';\r\n\r\n\r\nReactDOM.render(<Ecommerce />, document.getElementById('root'));"],"sourceRoot":""}